/*
  OpenSearch API Specification

  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

  The version of the OpenAPI document: 0.2.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package opensearch;

import public "google/protobuf/struct.proto";

enum Additive {
  ADDITIVE_UNSPECIFIED = 0;
  ADDITIVE_ADD = 1;
}
message AdjacencyMatrixAggregate {


  google.protobuf.Struct meta = 1;

  BucketsAdjacencyMatrixBucket buckets = 2;

}
message AdjacencyMatrixAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  // Filters used to create buckets. At least one filter is required.
  map<string, QueryContainer> filters = 3;

}
message AdjacencyMatrixBucket {


  float doc_count = 1;

  string key = 2;

}
message AdjacencyMatrixBucketArray {


  repeated AdjacencyMatrixBucket adjacency_matrix_bucket_array = 1;

}
message AdjacencyMatrixBucketMap {


  map<string, AdjacencyMatrixBucket> adjacency_matrix_bucket_map = 1;

}
message Aggregate {


  CardinalityAggregate cardinality_aggregate = 1;

  HdrPercentilesAggregate hdr_percentiles_aggregate = 2;

  HdrPercentileRanksAggregate hdr_percentile_ranks_aggregate = 3;

  TDigestPercentilesAggregate t_digest_percentiles_aggregate = 4;

  TDigestPercentileRanksAggregate t_digest_percentile_ranks_aggregate = 5;

  PercentilesBucketAggregate percentiles_bucket_aggregate = 6;

  MedianAbsoluteDeviationAggregate median_absolute_deviation_aggregate = 7;

  MinAggregate min_aggregate = 8;

  MaxAggregate max_aggregate = 9;

  SumAggregate sum_aggregate = 10;

  AvgAggregate avg_aggregate = 11;

  WeightedAvgAggregate weighted_avg_aggregate = 12;

  ValueCountAggregate value_count_aggregate = 13;

  SimpleValueAggregate simple_value_aggregate = 14;

  DerivativeAggregate derivative_aggregate = 15;

  BucketMetricValueAggregate bucket_metric_value_aggregate = 16;

  StatsAggregate stats_aggregate = 17;

  StatsBucketAggregate stats_bucket_aggregate = 18;

  ExtendedStatsAggregate extended_stats_aggregate = 19;

  ExtendedStatsBucketAggregate extended_stats_bucket_aggregate = 20;

  GeoBoundsAggregate geo_bounds_aggregate = 21;

  GeoCentroidAggregate geo_centroid_aggregate = 22;

  HistogramAggregate histogram_aggregate = 23;

  DateHistogramAggregate date_histogram_aggregate = 24;

  AutoDateHistogramAggregate auto_date_histogram_aggregate = 25;

  VariableWidthHistogramAggregate variable_width_histogram_aggregate = 26;

  StringTermsAggregate string_terms_aggregate = 27;

  LongTermsAggregate long_terms_aggregate = 28;

  DoubleTermsAggregate double_terms_aggregate = 29;

  UnmappedTermsAggregate unmapped_terms_aggregate = 30;

  LongRareTermsAggregate long_rare_terms_aggregate = 31;

  StringRareTermsAggregate string_rare_terms_aggregate = 32;

  UnmappedRareTermsAggregate unmapped_rare_terms_aggregate = 33;

  MultiTermsAggregate multi_terms_aggregate = 34;

  MissingAggregate missing_aggregate = 35;

  NestedAggregate nested_aggregate = 36;

  ReverseNestedAggregate reverse_nested_aggregate = 37;

  GlobalAggregate global_aggregate = 38;

  FilterAggregate filter_aggregate = 39;

  ChildrenAggregate children_aggregate = 40;

  ParentAggregate parent_aggregate = 41;

  SamplerAggregate sampler_aggregate = 42;

  UnmappedSamplerAggregate unmapped_sampler_aggregate = 43;

  GeoHashGridAggregate geo_hash_grid_aggregate = 44;

  GeoTileGridAggregate geo_tile_grid_aggregate = 45;

  RangeAggregate range_aggregate = 46;

  DateRangeAggregate date_range_aggregate = 47;

  GeoDistanceAggregate geo_distance_aggregate = 48;

  IpRangeAggregate ip_range_aggregate = 49;

  FiltersAggregate filters_aggregate = 50;

  AdjacencyMatrixAggregate adjacency_matrix_aggregate = 51;

  SignificantLongTermsAggregate significant_long_terms_aggregate = 52;

  SignificantStringTermsAggregate significant_string_terms_aggregate = 53;

  UnmappedSignificantTermsAggregate unmapped_significant_terms_aggregate = 54;

  CompositeAggregate composite_aggregate = 55;

  ScriptedMetricAggregate scripted_metric_aggregate = 56;

  TopHitsAggregate top_hits_aggregate = 57;

  InferenceAggregate inference_aggregate = 58;

  StringStatsAggregate string_stats_aggregate = 59;

  BoxPlotAggregate box_plot_aggregate = 60;

  TopMetricsAggregate top_metrics_aggregate = 61;

  TTestAggregate t_test_aggregate = 62;

  RateAggregate rate_aggregate = 63;

  CumulativeCardinalityAggregate cumulative_cardinality_aggregate = 64;

  MatrixStatsAggregate matrix_stats_aggregate = 65;

  GeoLineAggregate geo_line_aggregate = 66;

}
message AggregateBase {


  google.protobuf.Struct meta = 1;

}
message AggregateOrder {

    oneof aggregate_order {
        StringMap string_map = 1;

        StringMapArray string_map_array = 2;

    }

}
message Aggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

}
message AggregationBreakdown {


  int64 build_aggregation = 1;

  int64 build_aggregation_count = 2;

  int64 build_leaf_collector = 3;

  int64 build_leaf_collector_count = 4;

  int64 collect = 5;

  int64 collect_count = 6;

  int64 initialize = 7;

  int64 initialize_count = 8;

  int64 post_collection = 9;

  int64 post_collection_count = 10;

  int64 reduce = 11;

  int64 reduce_count = 12;

}
message AggregationContainer {


  // Sub-aggregations for this aggregation. Only applies to bucket aggregations.
  map<string, AggregationContainer> aggregations = 1;

  // Sub-aggregations for this aggregation. Only applies to bucket aggregations.
  map<string, AggregationContainer> aggs = 2;

  google.protobuf.Struct meta = 3;

  AdjacencyMatrixAggregation adjacency_matrix = 4;

  AutoDateHistogramAggregation auto_date_histogram = 5;

  AverageAggregation avg = 6;

  AverageBucketAggregation avg_bucket = 7;

  BoxplotAggregation boxplot = 8;

  BucketScriptAggregation bucket_script = 9;

  BucketSelectorAggregation bucket_selector = 10;

  BucketSortAggregation bucket_sort = 11;

  CardinalityAggregation cardinality = 12;

  ChildrenAggregation children = 13;

  CompositeAggregation composite = 14;

  CumulativeCardinalityAggregation cumulative_cardinality = 15;

  CumulativeSumAggregation cumulative_sum = 16;

  DateHistogramAggregation date_histogram = 17;

  DateRangeAggregation date_range = 18;

  DerivativeAggregation derivative = 19;

  DiversifiedSamplerAggregation diversified_sampler = 20;

  ExtendedStatsAggregation extended_stats = 21;

  ExtendedStatsBucketAggregation extended_stats_bucket = 22;

  QueryContainer filter = 23;

  FiltersAggregation filters = 24;

  GeoBoundsAggregation geo_bounds = 25;

  GeoCentroidAggregation geo_centroid = 26;

  GeoDistanceAggregation geo_distance = 27;

  GeoHashGridAggregation geohash_grid = 28;

  GeoLineAggregation geo_line = 29;

  GeoTileGridAggregation geotile_grid = 30;

  GlobalAggregation global = 31;

  HistogramAggregation histogram = 32;

  IpRangeAggregation ip_range = 33;

  InferenceAggregation inference = 34;

  GeoLineAggregation line = 35;

  MatrixStatsAggregation matrix_stats = 36;

  MaxAggregation max = 37;

  MaxBucketAggregation max_bucket = 38;

  MedianAbsoluteDeviationAggregation median_absolute_deviation = 39;

  MinAggregation min = 40;

  MinBucketAggregation min_bucket = 41;

  MissingAggregation missing = 42;

  MovingAverageAggregation moving_avg = 43;

  MovingPercentilesAggregation moving_percentiles = 44;

  MovingFunctionAggregation moving_fn = 45;

  MultiTermsAggregation multi_terms = 46;

  NestedAggregation nested = 47;

  NormalizeAggregation normalize = 48;

  ParentAggregation parent = 49;

  PercentileRanksAggregation percentile_ranks = 50;

  PercentilesAggregation percentiles = 51;

  PercentilesBucketAggregation percentiles_bucket = 52;

  RangeAggregation range = 53;

  RareTermsAggregation rare_terms = 54;

  RateAggregation rate = 55;

  ReverseNestedAggregation reverse_nested = 56;

  SamplerAggregation sampler = 57;

  ScriptedMetricAggregation scripted_metric = 58;

  SerialDifferencingAggregation serial_diff = 59;

  SignificantTermsAggregation significant_terms = 60;

  SignificantTextAggregation significant_text = 61;

  StatsAggregation stats = 62;

  StatsBucketAggregation stats_bucket = 63;

  StringStatsAggregation string_stats = 64;

  SumAggregation sum = 65;

  SumBucketAggregation sum_bucket = 66;

  TermsAggregation terms = 67;

  TopHitsAggregation top_hits = 68;

  TTestAggregation t_test = 69;

  TopMetricsAggregation top_metrics = 70;

  ValueCountAggregation value_count = 71;

  WeightedAverageAggregation weighted_avg = 72;

  VariableWidthHistogramAggregation variable_width_histogram = 73;

}
message AggregationProfile {


  AggregationBreakdown breakdown = 1;

  string description = 2;

  // Time unit for nanoseconds.
  int64 time_in_nanos = 3;

  string type = 4;

  AggregationProfileDebug debug = 5;

  repeated AggregationProfile children = 6;

}
message AggregationProfileDebug {


  int32 segments_with_multi_valued_ords = 1;

  string collection_strategy = 2;

  int32 segments_with_single_valued_ords = 3;

  int32 total_buckets = 4;

  int32 built_buckets = 5;

  string result_strategy = 6;

  bool has_filter = 7;

  string delegate = 8;

  AggregationProfileDelegateDebug delegate_debug = 9;

  int32 chars_fetched = 10;

  int32 extract_count = 11;

  int32 extract_ns = 12;

  int32 values_fetched = 13;

  int32 collect_analyzed_ns = 14;

  int32 collect_analyzed_count = 15;

  int32 surviving_buckets = 16;

  int32 ordinals_collectors_used = 17;

  int32 ordinals_collectors_overhead_too_high = 18;

  int32 string_hashing_collectors_used = 19;

  int32 numeric_collectors_used = 20;

  int32 empty_collectors_used = 21;

  repeated string deferred_aggregators = 22;

  string map_reducer = 23;

}
message AggregationProfileDelegateDebug {


  int32 segments_with_doc_count_field = 1;

  int32 segments_with_deleted_docs = 2;

  repeated AggregationProfileDelegateDebugFilter filters = 3;

  int32 segments_counted = 4;

  int32 segments_collected = 5;

}
message AggregationProfileDelegateDebugFilter {


  int32 results_from_metadata = 1;

  string query = 2;

  string specialized_for = 3;

  int32 segments_counted_in_constant_time = 4;

}
message AggregationRange {


  AggregationRangeFrom from = 1;

  // Custom key to return the range with.
  string key = 2;

  AggregationRangeTo to = 3;

}
message AggregationRangeFrom {


  float float = 1;

  string string = 2;

}
message AggregationRangeTo {


  float float = 1;

  string string = 2;

}
message Analyzer {

    oneof analyzer {
        CustomAnalyzer custom_analyzer = 1;

        FingerprintAnalyzer fingerprint_analyzer = 2;

        KeywordAnalyzer keyword_analyzer = 3;

        LanguageAnalyzer language_analyzer = 4;

        NoriAnalyzer nori_analyzer = 5;

        PatternAnalyzer pattern_analyzer = 6;

        SimpleAnalyzer simple_analyzer = 7;

        StandardAnalyzer standard_analyzer = 8;

        StopAnalyzer stop_analyzer = 9;

        WhitespaceAnalyzer whitespace_analyzer = 10;

        IcuAnalyzer icu_analyzer = 11;

        KuromojiAnalyzer kuromoji_analyzer = 12;

        SnowballAnalyzer snowball_analyzer = 13;

        DutchAnalyzer dutch_analyzer = 14;

        SmartcnAnalyzer smartcn_analyzer = 15;

        CjkAnalyzer cjk_analyzer = 16;

        PhoneAnalyzer phone_analyzer = 17;

    }

}
message ArrayPercentilesItem {


  string key = 1;

  ArrayPercentilesItemValue value = 2;

  string value_as_string = 3;

}
message ArrayPercentilesItemArray {


  repeated ArrayPercentilesItem array_percentiles_item_array = 1;

}
message ArrayPercentilesItemValue {


  float float = 1;

  string string = 2;

}
message AutoDateHistogramAggregate {


  google.protobuf.Struct meta = 1;

  BucketsDateHistogramBucket buckets = 2;

  // A date histogram interval, similar to `Duration`, with support for additional units: `w` (week), `M` (month), `q` (quarter), and `y` (year).
  string interval = 3;

}
message AutoDateHistogramAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  // The target number of buckets.
  int32 buckets = 3;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 4;

  // The date format used to format `key_as_string` in the response. If no `format` is specified, the first date format specified in the field mapping is used.
  string format = 5;

  MinimumInterval minimum_interval = 6;

  string missing = 7;

  // Time zone specified as a ISO 8601 UTC offset.
  string offset = 8;

  google.protobuf.Struct params = 9;

  Script script = 10;

  string time_zone = 11;

}
message AverageAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  string format = 4;

}
message AverageBucketAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

}
message AvgAggregate {


  google.protobuf.Struct meta = 1;

  SingleMetricAggregateBaseAllOfValue value = 2;

  string value_as_string = 3;

}
message BoolQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  BoolQueryAllOfFilter filter = 3;

  MinimumShouldMatch minimum_should_match = 4;

  string test = 5;

  BoolQueryAllOfMust must = 6;

  BoolQueryAllOfMustNot must_not = 7;

  BoolQueryAllOfShould should = 8;

  // Ensures correct behavior when a query contains only `must_not` clauses. By default set to true, OpenSearch adds a match-all clause to ensure results are returned from Lucene, with the `must_not` conditions applied as filters. If set to false, the query may return no results, as Lucene typically requires at least one positive condition.
  bool adjust_pure_negative = 9;

}
message BoolQueryAllOfFilter {

    oneof bool_query_all_of_filter {
        QueryContainer query_container = 1;

        QueryContainerArray query_container_array = 2;

    }

}
message BoolQueryAllOfMust {

    oneof bool_query_all_of_must {
        QueryContainer query_container = 1;

        QueryContainerArray query_container_array = 2;

    }

}
message BoolQueryAllOfMustNot {

    oneof bool_query_all_of_must_not {
        QueryContainer query_container = 1;

        QueryContainerArray query_container_array = 2;

    }

}
message BoolQueryAllOfShould {

    oneof bool_query_all_of_should {
        QueryContainer query_container = 1;

        QueryContainerArray query_container_array = 2;

    }

}
message BoostingQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Floating point number between 0 and 1.0 used to decrease the relevance scores of documents matching the `negative` query.
  float negative_boost = 3;

  QueryContainer negative = 4;

  QueryContainer positive = 5;

}
enum BoundaryScanner {
  BOUNDARY_SCANNER_UNSPECIFIED = 0;
  BOUNDARY_SCANNER_CHARS = 1;
  BOUNDARY_SCANNER_SENTENCE = 2;
  BOUNDARY_SCANNER_WORD = 3;
}
message BoxPlotAggregate {


  google.protobuf.Struct meta = 1;

  float min = 2;

  float max = 3;

  float q1 = 4;

  float q2 = 5;

  float q3 = 6;

  float lower = 7;

  float upper = 8;

  string min_as_string = 9;

  string max_as_string = 10;

  string q1_as_string = 11;

  string q2_as_string = 12;

  string q3_as_string = 13;

  string lower_as_string = 14;

  string upper_as_string = 15;

}
message BoxplotAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  // Limits the maximum number of nodes used by the underlying TDigest algorithm to `20 * compression`, enabling control of memory usage and approximation error.
  double compression = 4;

}
message BucketAggregationBase {


  google.protobuf.Struct meta = 1;

  string name = 2;

}
message BucketMetricValueAggregate {


  google.protobuf.Struct meta = 1;

  SingleMetricAggregateBaseAllOfValue value = 2;

  string value_as_string = 3;

  repeated string keys = 4;

}
message BucketPathAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

}
message BucketScriptAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  Script script = 6;

}
message BucketSelectorAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  Script script = 6;

}
message BucketSortAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  // Buckets in positions prior to `from` will be truncated.
  int32 from = 3;

  GapPolicy gap_policy = 4;

  // The number of buckets to return. Defaults to all buckets of the parent aggregation.
  int32 size = 5;

  Sort sort = 6;

}
message BucketsAdjacencyMatrixBucket {

    oneof buckets_adjacency_matrix_bucket {
        AdjacencyMatrixBucketMap adjacency_matrix_bucket_map = 1;

        AdjacencyMatrixBucketArray adjacency_matrix_bucket_array = 2;

    }

}
message BucketsCompositeBucket {

    oneof buckets_composite_bucket {
        CompositeBucketMap composite_bucket_map = 1;

        CompositeBucketArray composite_bucket_array = 2;

    }

}
message BucketsDateHistogramBucket {

    oneof buckets_date_histogram_bucket {
        DateHistogramBucketMap date_histogram_bucket_map = 1;

        DateHistogramBucketArray date_histogram_bucket_array = 2;

    }

}
message BucketsDoubleTermsBucket {

    oneof buckets_double_terms_bucket {
        DoubleTermsBucketMap double_terms_bucket_map = 1;

        DoubleTermsBucketArray double_terms_bucket_array = 2;

    }

}
message BucketsFiltersBucket {

    oneof buckets_filters_bucket {
        FiltersBucketMap filters_bucket_map = 1;

        FiltersBucketArray filters_bucket_array = 2;

    }

}
message BucketsGeoHashGridBucket {

    oneof buckets_geo_hash_grid_bucket {
        GeoHashGridBucketMap geo_hash_grid_bucket_map = 1;

        GeoHashGridBucketArray geo_hash_grid_bucket_array = 2;

    }

}
message BucketsGeoTileGridBucket {

    oneof buckets_geo_tile_grid_bucket {
        GeoTileGridBucketMap geo_tile_grid_bucket_map = 1;

        GeoTileGridBucketArray geo_tile_grid_bucket_array = 2;

    }

}
message BucketsHistogramBucket {

    oneof buckets_histogram_bucket {
        HistogramBucketMap histogram_bucket_map = 1;

        HistogramBucketArray histogram_bucket_array = 2;

    }

}
message BucketsIpRangeBucket {

    oneof buckets_ip_range_bucket {
        IpRangeBucketMap ip_range_bucket_map = 1;

        IpRangeBucketArray ip_range_bucket_array = 2;

    }

}
message BucketsLongRareTermsBucket {

    oneof buckets_long_rare_terms_bucket {
        LongRareTermsBucketMap long_rare_terms_bucket_map = 1;

        LongRareTermsBucketArray long_rare_terms_bucket_array = 2;

    }

}
message BucketsLongTermsBucket {

    oneof buckets_long_terms_bucket {
        LongTermsBucketMap long_terms_bucket_map = 1;

        LongTermsBucketArray long_terms_bucket_array = 2;

    }

}
message BucketsMultiTermsBucket {

    oneof buckets_multi_terms_bucket {
        MultiTermsBucketMap multi_terms_bucket_map = 1;

        MultiTermsBucketArray multi_terms_bucket_array = 2;

    }

}
message BucketsPath {

    oneof buckets_path {
        string single = 1;

        StringArray string_array = 2;

        StringMap dict = 3;

    }

}
message BucketsQueryContainer {

    oneof buckets_query_container {
        QueryContainerMap keyed = 1;

        QueryContainerArray query_container_array = 2;

    }

}
message BucketsRangeBucket {

    oneof buckets_range_bucket {
        RangeBucketMap range_bucket_map = 1;

        RangeBucketArray range_bucket_array = 2;

    }

}
message BucketsSignificantLongTermsBucket {

    oneof buckets_significant_long_terms_bucket {
        SignificantLongTermsBucketMap significant_long_terms_bucket_map = 1;

        SignificantLongTermsBucketArray significant_long_terms_bucket_array = 2;

    }

}
message BucketsSignificantStringTermsBucket {

    oneof buckets_significant_string_terms_bucket {
        SignificantStringTermsBucketMap significant_string_terms_bucket_map = 1;

        SignificantStringTermsBucketArray significant_string_terms_bucket_array = 2;

    }

}
message BucketsStringRareTermsBucket {

    oneof buckets_string_rare_terms_bucket {
        StringRareTermsBucketMap string_rare_terms_bucket_map = 1;

        StringRareTermsBucketArray string_rare_terms_bucket_array = 2;

    }

}
message BucketsStringTermsBucket {

    oneof buckets_string_terms_bucket {
        StringTermsBucketMap string_terms_bucket_map = 1;

        StringTermsBucketArray string_terms_bucket_array = 2;

    }

}
message BucketsVariableWidthHistogramBucket {

    oneof buckets_variable_width_histogram_bucket {
        VariableWidthHistogramBucketMap variable_width_histogram_bucket_map = 1;

        VariableWidthHistogramBucketArray variable_width_histogram_bucket_array = 2;

    }

}
message BucketsVoid {

    oneof buckets_void {
        NullMap null_map = 1;

        NullArray null_array = 2;

    }

}
message BuiltinHighlighterType {

    oneof builtin_highlighter_type {
        BuiltinHighlighterTypeOneOf builtin_highlighter_type_one_of = 1;

        FastVector fast_vector = 2;

        BuiltinHighlighterTypeOneOf1 builtin_highlighter_type_one_of1 = 3;

    }

}
enum BuiltinHighlighterTypeOneOf {
  BUILTIN_HIGHLIGHTER_TYPE_ONE_OF_UNSPECIFIED = 0;
  BUILTIN_HIGHLIGHTER_TYPE_ONE_OF_PLAIN = 1;
}
enum BuiltinHighlighterTypeOneOf1 {
  BUILTIN_HIGHLIGHTER_TYPE_ONE_OF1_UNSPECIFIED = 0;
  BUILTIN_HIGHLIGHTER_TYPE_ONE_OF1_UNIFIED = 1;
}
enum BuiltinScriptLanguage {
  BUILTIN_SCRIPT_LANGUAGE_UNSPECIFIED = 0;
  BUILTIN_SCRIPT_LANGUAGE_EXPRESSION = 1;
  BUILTIN_SCRIPT_LANGUAGE_JAVA = 2;
  BUILTIN_SCRIPT_LANGUAGE_MUSTACHE = 3;
  BUILTIN_SCRIPT_LANGUAGE_PAINLESS = 4;
}
message BulkRequestInner {


  OperationContainer operation_container = 1;

  UpdateAction update_action = 2;

  google.protobuf.Struct object = 3;

}
message CalendarInterval {

    oneof calendar_interval {
        Second second = 1;

        Minute minute = 2;

        Hour hour = 3;

        Day day = 4;

        Week week = 5;

        Month month = 6;

        Quarter quarter = 7;

        Year year = 8;

    }

}
message CardinalityAggregate {


  google.protobuf.Struct meta = 1;

  float value = 2;

}
message CardinalityAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  // A unique count below which counts are expected to be close to accurate. This allows to trade memory for accuracy.
  int32 precision_threshold = 4;

  bool rehash = 5;

  CardinalityExecutionMode execution_hint = 6;

}
enum CardinalityExecutionMode {
  CARDINALITY_EXECUTION_MODE_UNSPECIFIED = 0;
  CARDINALITY_EXECUTION_MODE_DIRECT = 1;
  CARDINALITY_EXECUTION_MODE_GLOBAL_ORDINALS = 2;
  CARDINALITY_EXECUTION_MODE_SAVE_MEMORY_HEURISTIC = 3;
  CARDINALITY_EXECUTION_MODE_SAVE_TIME_HEURISTIC = 4;
  CARDINALITY_EXECUTION_MODE_SEGMENT_ORDINALS = 5;
}
enum Centimeters {
  CENTIMETERS_UNSPECIFIED = 0;
  CENTIMETERS_CM = 1;
}
message ChiSquareHeuristic {


  // Set to `false` if you defined a custom background filter that represents a different set of documents that you want to compare to.
  bool background_is_superset = 1;

  // Set to `false` to filter out the terms that appear less often in the subset than in documents outside the subset.
  bool include_negatives = 2;

}
enum ChildScoreMode {
  CHILD_SCORE_MODE_UNSPECIFIED = 0;
  CHILD_SCORE_MODE_AVG = 1;
  CHILD_SCORE_MODE_MAX = 2;
  CHILD_SCORE_MODE_MIN = 3;
  CHILD_SCORE_MODE_NONE = 4;
  CHILD_SCORE_MODE_SUM = 5;
}
message ChildrenAggregate {


  google.protobuf.Struct meta = 1;

  float doc_count = 2;

}
message ChildrenAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  string type = 3;

}
message CjkAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_CJK = 1;
  }

  Type type = 1;

  // Language value, such as `arabic` or `thai`. Defaults to `english`. Each language value corresponds to a predefined list of stop words in Lucene. See Stop words by language for supported language values and their stop words. Also accepts an array of stop words.
  StringOrStringArray stopwords = 2;

  string stopwords_path = 3;

}
message ClassificationInferenceOptions {


  // Specifies the number of top class predictions to return. Defaults to 0.
  int32 num_top_classes = 1;

  // Specifies the maximum number of feature importance values per document.
  int32 num_top_feature_importance_values = 2;

  // Specifies the type of the predicted field to write. Acceptable values are: string, number, Boolean. When Boolean is provided 1.0 is transformed to true and 0.0 to false.
  string prediction_field_type = 3;

  // The field that is added to incoming documents to contain the inference prediction. Defaults to `predicted_value`.
  string results_field = 4;

  // Specifies the field to which the top classes are written. Defaults to `top_classes`.
  string top_classes_results_field = 5;

}
message ClusterDetails {


  ClusterSearchStatus status = 1;

  string indices = 2;

  // The time unit for milliseconds.
  int64 took = 3;

  bool timed_out = 4;

  ShardStatistics shards = 5 [json_name="_shards"];

  repeated ShardFailure failures = 6;

}
enum ClusterSearchStatus {
  CLUSTER_SEARCH_STATUS_UNSPECIFIED = 0;
  CLUSTER_SEARCH_STATUS_FAILED = 1;
  CLUSTER_SEARCH_STATUS_PARTIAL = 2;
  CLUSTER_SEARCH_STATUS_RUNNING = 3;
  CLUSTER_SEARCH_STATUS_SKIPPED = 4;
  CLUSTER_SEARCH_STATUS_SUCCESSFUL = 5;
}
message ClusterStatistics {


  int32 skipped = 1;

  int32 successful = 2;

  int32 total = 3;

  int32 running = 4;

  int32 partial = 5;

  int32 failed = 6;

  map<string, ClusterDetails> details = 7;

}
message Collector {


  string name = 1;

  string reason = 2;

  // Time unit for nanoseconds.
  int64 time_in_nanos = 3;

  repeated Collector children = 4;

}
enum CombinedFieldsOperator {
  COMBINED_FIELDS_OPERATOR_UNSPECIFIED = 0;
  COMBINED_FIELDS_OPERATOR_AND = 1;
  COMBINED_FIELDS_OPERATOR_OR = 2;
}
message CombinedFieldsQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // List of fields to search. Field wildcard patterns are allowed. Only `text` fields are supported, and they must all have the same search `analyzer`.
  repeated string fields = 3;

  // Text to search for in the provided `fields`. The `combined_fields` query analyzes the provided text before performing a search.
  string query = 4;

  // If `true`, match phrase queries are automatically created for multi-term synonyms.
  bool auto_generate_synonyms_phrase_query = 5;

  CombinedFieldsOperator operator = 6;

  MinimumShouldMatch minimum_should_match = 7;

  CombinedFieldsZeroTerms zero_terms_query = 8;

}
enum CombinedFieldsZeroTerms {
  COMBINED_FIELDS_ZERO_TERMS_UNSPECIFIED = 0;
  COMBINED_FIELDS_ZERO_TERMS_ALL = 1;
  COMBINED_FIELDS_ZERO_TERMS_NONE = 2;
}
message CommonTermsQuery {

    oneof common_terms_query {
        string query = 1;

        CommonTermsQueryOneOf common_terms_query_one_of = 2;

    }

}
message CommonTermsQueryOneOf {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  string analyzer = 3;

  float cutoff_frequency = 4;

  Operator high_freq_operator = 5;

  Operator low_freq_operator = 6;

  MinimumShouldMatch minimum_should_match = 7;

  string query = 8;

}
message CompletionContext {

    oneof completion_context {
        Context context = 1;

        CompletionContextOneOf completion_context_one_of = 2;

    }

}
message CompletionContextArray {


  repeated CompletionContext completion_context_array = 1;

}
message CompletionContextOneOf {


  double boost = 1;

  Context context = 2;

  repeated GeoHashPrecision neighbours = 3;

  GeoHashPrecision precision = 4;

  bool prefix = 5;

}
message CompletionSuggest {


  int32 length = 1;

  int32 offset = 2;

  string text = 3;

  CompletionSuggestAllOfOptions options = 4;

}
message CompletionSuggestAllOfOptions {

    oneof completion_suggest_all_of_options {
        CompletionSuggestOption completion_suggest_option = 1;

        CompletionSuggestOptionArray completion_suggest_option_array = 2;

    }

}
message CompletionSuggestOption {


  bool collate_match = 1;

  map<string, ContextArray> contexts = 2;

  map<string, google.protobuf.Struct> fields = 3;

  string id = 4 [json_name="_id"];

  string index = 5 [json_name="_index"];

  string routing = 6 [json_name="_routing"];

  float score = 7 [json_name="_score"];

  google.protobuf.Struct source = 8 [json_name="_source"];

  string text = 9;

  float score = 10;

}
message CompletionSuggestOptionArray {


  repeated CompletionSuggestOption completion_suggest_option_array = 1;

}
message CompletionSuggester {


  string analyzer = 1;

  string field = 2;

  int32 size = 3;

  map<string, CompletionContextArray> contexts = 4;

  SuggestFuzziness fuzzy = 5;

  string regex = 6;

  bool skip_duplicates = 7;

}
message CompositeAggregate {


  google.protobuf.Struct meta = 1;

  BucketsCompositeBucket buckets = 2;

  map<string, FieldValue> after_key = 3;

}
message CompositeAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  map<string, FieldValue> after = 3;

  // The number of composite buckets that should be returned.
  int32 size = 4;

  // The value sources used to build composite buckets. Keys are returned in the order of the `sources` definition.
  repeated CompositeAggregationSourceMap sources = 5;

}
message CompositeAggregationSource {


  CompositeTermsAggregationSource terms = 1;

  CompositeHistogramAggregationSource histogram = 2;

  CompositeDateHistogramAggregationSource date_histogram = 3;

  CompositeGeoTileGridAggregationSource geotile_grid = 4;

}
message CompositeAggregationSourceMap {


  map<string, CompositeAggregationSource> composite_aggregation_source_map = 1;

}
message CompositeBucket {


  float doc_count = 1;

  map<string, FieldValue> key = 2;

}
message CompositeBucketArray {


  repeated CompositeBucket composite_bucket_array = 1;

}
message CompositeBucketMap {


  map<string, CompositeBucket> composite_bucket_map = 1;

}
message CompositeDateHistogramAggregationSource {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  bool missing_bucket = 2;

  MissingOrder missing_order = 3;

  Script script = 4;

  ValueType value_type = 5;

  SortOrder order = 6;

  string format = 7;

  // A date histogram interval, similar to `Duration`, with support for additional units: `w` (week), `M` (month), `q` (quarter), and `y` (year).
  string calendar_interval = 8;

  // A date histogram interval, similar to `Duration`, with support for additional units: `w` (week), `M` (month), `q` (quarter), and `y` (year).
  string fixed_interval = 9;

  // A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and `d` (days). Also accepts \"0\" without a unit and \"-1\" to indicate an unspecified value.
  string offset = 10;

  string time_zone = 11;

}
message CompositeGeoTileGridAggregationSource {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  bool missing_bucket = 2;

  MissingOrder missing_order = 3;

  Script script = 4;

  ValueType value_type = 5;

  SortOrder order = 6;

  int32 precision = 7;

  GeoBounds bounds = 8;

}
message CompositeHistogramAggregationSource {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  bool missing_bucket = 2;

  MissingOrder missing_order = 3;

  Script script = 4;

  ValueType value_type = 5;

  SortOrder order = 6;

  double interval = 7;

}
message CompositeTermsAggregationSource {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  bool missing_bucket = 2;

  MissingOrder missing_order = 3;

  Script script = 4;

  ValueType value_type = 5;

  SortOrder order = 6;

}
message CompositeValuesSource {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  bool missing_bucket = 2;

  MissingOrder missing_order = 3;

  Script script = 4;

  ValueType value_type = 5;

  SortOrder order = 6;

}
message ConstantScoreQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  QueryContainer filter = 3;

}
message Context {

    oneof context {
        string category = 1;

        GeoLocation location = 2;

    }

}
message ContextArray {


  repeated Context context_array = 1;

}
message CoordsGeoBounds {


  double top = 1;

  double bottom = 2;

  double left = 3;

  double right = 4;

}
message CreateOperation {


}
message CumulativeCardinalityAggregate {


  google.protobuf.Struct meta = 1;

  float value = 2;

  string value_as_string = 3;

}
message CumulativeCardinalityAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

}
message CumulativeSumAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

}
message CustomAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_CUSTOM = 1;
  }

  Type type = 1;

  repeated string char_filter = 2;

  repeated string filter = 3;

  int32 position_increment_gap = 4;

  int32 position_offset_gap = 5;

  string tokenizer = 6;

}
message DateDecayPlacement {


  double decay = 1;

  // A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and `d` (days). Also accepts \"0\" without a unit and \"-1\" to indicate an unspecified value.
  string offset = 2;

  string origin = 3;

  // A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and `d` (days). Also accepts \"0\" without a unit and \"-1\" to indicate an unspecified value.
  string scale = 4;

}
message DateFormat {


}
message DateHistogramAggregate {


  google.protobuf.Struct meta = 1;

  BucketsDateHistogramBucket buckets = 2;

}
message DateHistogramAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  CalendarInterval calendar_interval = 3;

  ExtendedBoundsFieldDateMath extended_bounds = 4;

  ExtendedBoundsFieldDateMath hard_bounds = 5;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 6;

  // A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and `d` (days). Also accepts \"0\" without a unit and \"-1\" to indicate an unspecified value.
  string fixed_interval = 7;

  // The date format used to format `key_as_string` in the response. If no `format` is specified, the first date format specified in the field mapping is used.
  string format = 8;

  // A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and `d` (days). Also accepts \"0\" without a unit and \"-1\" to indicate an unspecified value.
  string interval = 9;

  // Only returns buckets that have `min_doc_count` number of documents. By default, all buckets between the first bucket that matches documents and the last one are returned.
  int32 min_doc_count = 10;

  string missing = 11;

  // A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and `d` (days). Also accepts \"0\" without a unit and \"-1\" to indicate an unspecified value.
  string offset = 12;

  HistogramOrder order = 13;

  google.protobuf.Struct params = 14;

  Script script = 15;

  string time_zone = 16;

  // Set to `true` to associate a unique string key with each bucket and return the ranges as a hash rather than an array.
  bool keyed = 17;

}
message DateHistogramBucket {


  float doc_count = 1;

  string key_as_string = 2;

  // The time unit for milliseconds.
  int64 key = 3;

}
message DateHistogramBucketArray {


  repeated DateHistogramBucket date_histogram_bucket_array = 1;

}
message DateHistogramBucketMap {


  map<string, DateHistogramBucket> date_histogram_bucket_map = 1;

}
message DateMath {


}
message DateRangeAggregate {


  google.protobuf.Struct meta = 1;

  BucketsRangeBucket buckets = 2;

}
message DateRangeAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 3;

  // The date format used to format `from` and `to` in the response.
  string format = 4;

  FieldValue missing = 5;

  // Array of date ranges.
  repeated DateRangeExpression ranges = 6;

  string time_zone = 7;

  // Set to `true` to associate a unique string key with each bucket and returns the ranges as a hash rather than an array.
  bool keyed = 8;

}
message DateRangeExpression {


  FieldDateMath from = 1;

  // Custom key to return the range with.
  string key = 2;

  FieldDateMath to = 3;

}
message DateRangeQueryParameters {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  RangeRelation relation = 3;

  string gt = 4;

  string gte = 5;

  string lt = 6;

  string lte = 7;

  string from = 8;

  string to = 9;

  string format = 10;

  string time_zone = 11;

}
message DateTime {

    oneof date_time {
        string string = 1;

        // The time unit for milliseconds.
        int64 int64 = 2;

    }

}
enum Day {
  DAY_UNSPECIFIED = 0;
  DAY_DAY = 1;
  DAY_1D = 2;
}
message DecayFunction {


  MultiValueMode multi_value_mode = 1;

}
message DecayFunctionBase {


  MultiValueMode multi_value_mode = 1;

}
message DecayPlacement {


  DateDecayPlacement date_decay_placement = 1;

  GeoDecayPlacement geo_decay_placement = 2;

  NumericDecayPlacement numeric_decay_placement = 3;

}
message DeleteOperation {


}
message DerivativeAggregate {


  google.protobuf.Struct meta = 1;

  SingleMetricAggregateBaseAllOfValue value = 2;

  string value_as_string = 3;

  float normalized_value = 4;

  string normalized_value_as_string = 5;

}
message DerivativeAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

}
message DirectGenerator {


  string field = 1;

  int32 max_edits = 2;

  float max_inspections = 3;

  float max_term_freq = 4;

  float min_doc_freq = 5;

  int32 min_word_length = 6;

  string post_filter = 7;

  string pre_filter = 8;

  int32 prefix_length = 9;

  int32 size = 10;

  SuggestMode suggest_mode = 11;

}
message DisMaxQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // One or more query clauses. Returned documents must match one or more of these queries. If a document matches multiple queries, OpenSearch uses the highest relevance score.
  repeated QueryContainer queries = 3;

  // Floating point number between 0 and 1.0 used to increase the relevance scores of documents matching multiple query clauses.
  float tie_breaker = 4;

}
message Distance {


}
message DistanceFeatureQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  string origin = 3;

  // A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and `d` (days). Also accepts \"0\" without a unit and \"-1\" to indicate an unspecified value.
  string pivot = 4;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 5;

}
message DistanceUnit {

    oneof distance_unit {
        Centimeters centimeters = 1;

        Feet feet = 2;

        Inches inches = 3;

        Kilometers kilometers = 4;

        Meters meters = 5;

        Miles miles = 6;

        Millimeters millimeters = 7;

        NauticalMiles nautical_miles = 8;

        Yards yards = 9;

    }

}
message DiversifiedSamplerAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  SamplerAggregationExecutionHint execution_hint = 3;

  // Limits how many documents are permitted per choice of de-duplicating value.
  int32 max_docs_per_value = 4;

  Script script = 5;

  // Limits how many top-scoring documents are collected in the sample processed on each shard.
  int32 shard_size = 6;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 7;

}
message DoubleArray {


  repeated double double_array = 1;

}
message DoubleTermsAggregate {


  google.protobuf.Struct meta = 1;

  BucketsDoubleTermsBucket buckets = 2;

  float doc_count_error_upper_bound = 3;

  float sum_other_doc_count = 4;

}
message DoubleTermsBucket {


  float doc_count = 1;

  float doc_count_error = 2;

  string key_as_string = 3;

  float key = 4;

}
message DoubleTermsBucketArray {


  repeated DoubleTermsBucket double_terms_bucket_array = 1;

}
message DoubleTermsBucketMap {


  map<string, DoubleTermsBucket> double_terms_bucket_map = 1;

}
message Duration {


}
message DurationLarge {


}
message DurationValueUnitMillis {


}
message DurationValueUnitNanos {


}
message DutchAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_DUTCH = 1;
  }

  Type type = 1;

  // Language value, such as `arabic` or `thai`. Defaults to `english`. Each language value corresponds to a predefined list of stop words in Lucene. See Stop words by language for supported language values and their stop words. Also accepts an array of stop words.
  StringOrStringArray stopwords = 2;

}
message EpochTimeUnitMillis {


}
message Error {


  repeated RootCause root_cause = 1;

  string type = 2;

  string reason = 3;

}
message ErrorCause {


  // The type of error.
  string type = 1;

  // A human-readable explanation of the error, in English.
  string reason = 2;

  // The server stack trace, present only if the `error_trace=true` parameter was sent with the request.
  string stack_trace = 3;

  ErrorCause caused_by = 4;

  repeated NullMap root_cause = 5;

  repeated NullMap suppressed = 6;

}
message ErrorResponse {


  Error error = 1;

  float status = 2;

}
message EwmaModelSettings {


  float alpha = 1;

}
message EwmaMovingAverageAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  bool minimize = 6;

  int32 predict = 7;

  int32 window = 8;

  enum Model {
    MODEL_UNSPECIFIED = 0;
    MODEL_EWMA = 1;
  }

  Model model = 9;

  EwmaModelSettings settings = 10;

}
message ExistsQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 3;

}
message ExpandWildcard {

    oneof expand_wildcard {
        ExpandWildcardOneOf expand_wildcard_one_of = 1;

        ExpandWildcardOneOf1 expand_wildcard_one_of1 = 2;

        ExpandWildcardOneOf2 expand_wildcard_one_of2 = 3;

        ExpandWildcardOneOf3 expand_wildcard_one_of3 = 4;

        ExpandWildcardOneOf4 expand_wildcard_one_of4 = 5;

    }

}
message ExpandWildcardArray {


  repeated ExpandWildcard expand_wildcard_array = 1;

}
enum ExpandWildcardOneOf {
  EXPAND_WILDCARD_ONE_OF_UNSPECIFIED = 0;
  EXPAND_WILDCARD_ONE_OF_ALL = 1;
}
enum ExpandWildcardOneOf1 {
  EXPAND_WILDCARD_ONE_OF1_UNSPECIFIED = 0;
  EXPAND_WILDCARD_ONE_OF1_CLOSED = 1;
}
enum ExpandWildcardOneOf2 {
  EXPAND_WILDCARD_ONE_OF2_UNSPECIFIED = 0;
  EXPAND_WILDCARD_ONE_OF2_HIDDEN = 1;
}
enum ExpandWildcardOneOf3 {
  EXPAND_WILDCARD_ONE_OF3_UNSPECIFIED = 0;
  EXPAND_WILDCARD_ONE_OF3_NONE = 1;
}
enum ExpandWildcardOneOf4 {
  EXPAND_WILDCARD_ONE_OF4_UNSPECIFIED = 0;
  EXPAND_WILDCARD_ONE_OF4_OPEN = 1;
}
message ExpandWildcards {

    oneof expand_wildcards {
        ExpandWildcard expand_wildcard = 1;

        ExpandWildcardArray expand_wildcard_array = 2;

    }

}
message ExplainRequest {


  QueryContainer query = 1;

}
message Explanation {


  string description = 1;

  repeated ExplanationDetail details = 2;

  ExplanationValue value = 3;

}
message ExplanationDetail {


  string description = 1;

  repeated ExplanationDetail details = 2;

  ExplanationDetailValue value = 3;

}
message ExplanationDetailValue {


  int32 int32 = 1;

  int64 int64 = 2;

  float float = 3;

  double double = 4;

}
message ExplanationValue {

    oneof explanation_value {
        int32 int32 = 1;

        int64 int64 = 2;

        float float = 3;

        double double = 4;

    }

}
message ExtendedBoundsFieldDateMath {


  FieldDateMath max = 1;

  FieldDateMath min = 2;

}
message ExtendedBoundsdouble {


  // Maximum value for the bound.
  float max = 1;

  // Minimum value for the bound.
  float min = 2;

}
message ExtendedStatsAggregate {


  google.protobuf.Struct meta = 1;

  float count = 2;

  StatsAggregateAllOfMin min = 3;

  StatsAggregateAllOfMax max = 4;

  StatsAggregateAllOfAvg avg = 5;

  float sum = 6;

  string min_as_string = 7;

  string max_as_string = 8;

  string avg_as_string = 9;

  string sum_as_string = 10;

  ExtendedStatsAggregateAllOfSumOfSquares sum_of_squares = 11;

  ExtendedStatsAggregateAllOfVariance variance = 12;

  ExtendedStatsAggregateAllOfVariancePopulation variance_population = 13;

  ExtendedStatsAggregateAllOfVarianceSampling variance_sampling = 14;

  ExtendedStatsAggregateAllOfStdDeviation std_deviation = 15;

  ExtendedStatsAggregateAllOfStdDeviationPopulation std_deviation_population = 16;

  ExtendedStatsAggregateAllOfStdDeviationSampling std_deviation_sampling = 17;

  StandardDeviationBounds std_deviation_bounds = 18;

  string sum_of_squares_as_string = 19;

  string variance_as_string = 20;

  string variance_population_as_string = 21;

  string variance_sampling_as_string = 22;

  string std_deviation_as_string = 23;

  StandardDeviationBoundsAsString std_deviation_bounds_as_string = 24;

}
message ExtendedStatsAggregateAllOfStdDeviation {


  float float = 1;

  string string = 2;

}
message ExtendedStatsAggregateAllOfStdDeviationPopulation {


  float float = 1;

  string string = 2;

}
message ExtendedStatsAggregateAllOfStdDeviationSampling {


  float float = 1;

  string string = 2;

}
message ExtendedStatsAggregateAllOfSumOfSquares {


  float float = 1;

  string string = 2;

}
message ExtendedStatsAggregateAllOfVariance {


  float float = 1;

  string string = 2;

}
message ExtendedStatsAggregateAllOfVariancePopulation {


  float float = 1;

  string string = 2;

}
message ExtendedStatsAggregateAllOfVarianceSampling {


  float float = 1;

  string string = 2;

}
message ExtendedStatsAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  string format = 4;

  // The number of standard deviations above/below the mean to display.
  double sigma = 5;

}
message ExtendedStatsBucketAggregate {


  google.protobuf.Struct meta = 1;

  float count = 2;

  StatsAggregateAllOfMin min = 3;

  StatsAggregateAllOfMax max = 4;

  StatsAggregateAllOfAvg avg = 5;

  float sum = 6;

  string min_as_string = 7;

  string max_as_string = 8;

  string avg_as_string = 9;

  string sum_as_string = 10;

  ExtendedStatsAggregateAllOfSumOfSquares sum_of_squares = 11;

  ExtendedStatsAggregateAllOfVariance variance = 12;

  ExtendedStatsAggregateAllOfVariancePopulation variance_population = 13;

  ExtendedStatsAggregateAllOfVarianceSampling variance_sampling = 14;

  ExtendedStatsAggregateAllOfStdDeviation std_deviation = 15;

  ExtendedStatsAggregateAllOfStdDeviationPopulation std_deviation_population = 16;

  ExtendedStatsAggregateAllOfStdDeviationSampling std_deviation_sampling = 17;

  StandardDeviationBounds std_deviation_bounds = 18;

  string sum_of_squares_as_string = 19;

  string variance_as_string = 20;

  string variance_population_as_string = 21;

  string variance_sampling_as_string = 22;

  string std_deviation_as_string = 23;

  StandardDeviationBoundsAsString std_deviation_bounds_as_string = 24;

}
message ExtendedStatsBucketAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  // The number of standard deviations above/below the mean to display.
  double sigma = 6;

}
enum FastVector {
  FAST_VECTOR_UNSPECIFIED = 0;
  FAST_VECTOR_FVH = 1;
}
enum Feet {
  FEET_UNSPECIFIED = 0;
  FEET_FT = 1;
}
message FetchProfile {


  string type = 1;

  string description = 2;

  // Time unit for nanoseconds.
  int64 time_in_nanos = 3;

  FetchProfileBreakdown breakdown = 4;

  FetchProfileDebug debug = 5;

  repeated FetchProfile children = 6;

}
message FetchProfileBreakdown {


  int32 load_source = 1;

  int32 load_source_count = 2;

  int32 load_stored_fields = 3;

  int32 load_stored_fields_count = 4;

  int32 next_reader = 5;

  int32 next_reader_count = 6;

  int32 process_count = 7;

  int32 process = 8;

}
message FetchProfileDebug {


  repeated string stored_fields = 1;

  int32 fast_path = 2;

}
message Field {


}
message FieldAndFormat {

    oneof field_and_format {
        // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
        string field = 1;

        FieldAndFormatOneOf field_and_format_one_of = 2;

    }

}
message FieldAndFormatOneOf {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  // Format in which the values are returned.
  string format = 2;

  bool include_unmapped = 3;

}
message FieldCollapse {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldCollapseInnerHits inner_hits = 2;

  // The number of concurrent requests that are allowed to be retrieved by the `inner_hits` parameter per group.
  int32 max_concurrent_group_searches = 3;

}
message FieldCollapseInnerHits {

    oneof field_collapse_inner_hits {
        InnerHits inner_hits = 1;

        InnerHitsArray inner_hits_array = 2;

    }

}
message FieldDateMath {

    oneof field_date_math {
        string expr = 1;

        double value = 2;

    }

}
message FieldLookup {


  string id = 1;

  string index = 2;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string path = 3;

  string routing = 4;

}
message FieldSort {

    oneof field_sort {
        SortOrder order = 1;

        FieldSortOneOf field_sort_one_of = 2;

    }

}
message FieldSortMap {


  map<string, FieldSort> field_sort_map = 1;

}
enum FieldSortNumericType {
  FIELD_SORT_NUMERIC_TYPE_UNSPECIFIED = 0;
  FIELD_SORT_NUMERIC_TYPE_DATE = 1;
  FIELD_SORT_NUMERIC_TYPE_DATE_NANOS = 2;
  FIELD_SORT_NUMERIC_TYPE_DOUBLE = 3;
  FIELD_SORT_NUMERIC_TYPE_LONG = 4;
}
message FieldSortOneOf {


}
message FieldSuggester {


  string prefix = 1;

  string regex = 2;

  string text = 3;

  CompletionSuggester completion = 4;

  PhraseSuggester phrase = 5;

  TermSuggester term = 6;

}
enum FieldType {
  FIELD_TYPE_UNSPECIFIED = 0;
  FIELD_TYPE_AGGREGATE_METRIC_DOUBLE = 1;
  FIELD_TYPE_ALIAS = 2;
  FIELD_TYPE_BINARY = 3;
  FIELD_TYPE_BOOLEAN = 4;
  FIELD_TYPE_BYTE = 5;
  FIELD_TYPE_COMPLETION = 6;
  FIELD_TYPE_CONSTANT_KEYWORD = 7;
  FIELD_TYPE_DATE = 8;
  FIELD_TYPE_DATE_NANOS = 9;
  FIELD_TYPE_DATE_RANGE = 10;
  FIELD_TYPE_DOUBLE = 11;
  FIELD_TYPE_DOUBLE_RANGE = 12;
  FIELD_TYPE_FLAT_OBJECT = 13;
  FIELD_TYPE_FLOAT = 14;
  FIELD_TYPE_FLOAT_RANGE = 15;
  FIELD_TYPE_GEO_POINT = 16;
  FIELD_TYPE_GEO_SHAPE = 17;
  FIELD_TYPE_HALF_FLOAT = 18;
  FIELD_TYPE_HISTOGRAM = 19;
  FIELD_TYPE_ICU_COLLATION_KEYWORD = 20;
  FIELD_TYPE_INTEGER = 21;
  FIELD_TYPE_INTEGER_RANGE = 22;
  FIELD_TYPE_IP = 23;
  FIELD_TYPE_IP_RANGE = 24;
  FIELD_TYPE_JOIN = 25;
  FIELD_TYPE_KEYWORD = 26;
  FIELD_TYPE_KNN_VECTOR = 27;
  FIELD_TYPE_LONG = 28;
  FIELD_TYPE_LONG_RANGE = 29;
  FIELD_TYPE_MATCH_ONLY_TEXT = 30;
  FIELD_TYPE_MURMUR3 = 31;
  FIELD_TYPE_NESTED = 32;
  FIELD_TYPE_OBJECT = 33;
  FIELD_TYPE_PERCOLATOR = 34;
  FIELD_TYPE_RANK_FEATURE = 35;
  FIELD_TYPE_RANK_FEATURES = 36;
  FIELD_TYPE_SCALED_FLOAT = 37;
  FIELD_TYPE_SEARCH_AS_YOU_TYPE = 38;
  FIELD_TYPE_SHORT = 39;
  FIELD_TYPE_TEXT = 40;
  FIELD_TYPE_TOKEN_COUNT = 41;
  FIELD_TYPE_UNSIGNED_LONG = 42;
  FIELD_TYPE_VERSION = 43;
  FIELD_TYPE_WILDCARD = 44;
  FIELD_TYPE_XY_POINT = 45;
  FIELD_TYPE_XY_SHAPE = 46;
}
message FieldValue {


  bool bool = 1;

  float float = 2;

  string string = 3;

}
message FieldValueArray {


  repeated FieldValue field_value_array = 1;

}
enum FieldValueFactorModifier {
  FIELD_VALUE_FACTOR_MODIFIER_UNSPECIFIED = 0;
  FIELD_VALUE_FACTOR_MODIFIER_LN = 1;
  FIELD_VALUE_FACTOR_MODIFIER_LN1P = 2;
  FIELD_VALUE_FACTOR_MODIFIER_LN2P = 3;
  FIELD_VALUE_FACTOR_MODIFIER_LOG = 4;
  FIELD_VALUE_FACTOR_MODIFIER_LOG1P = 5;
  FIELD_VALUE_FACTOR_MODIFIER_LOG2P = 6;
  FIELD_VALUE_FACTOR_MODIFIER_NONE = 7;
  FIELD_VALUE_FACTOR_MODIFIER_RECIPROCAL = 8;
  FIELD_VALUE_FACTOR_MODIFIER_SQRT = 9;
  FIELD_VALUE_FACTOR_MODIFIER_SQUARE = 10;
}
message FieldValueFactorScoreFunction {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  // Optional factor to multiply the field value with.
  float factor = 2;

  // Value used if the document doesn't have that field. The modifier and factor are still applied to it as though it were read from the document.
  double missing = 3;

  FieldValueFactorModifier modifier = 4;

}
message Fields {

    oneof fields {
        // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
        string string = 1;

        StringArray string_array = 2;

    }

}
message FilterAggregate {


  google.protobuf.Struct meta = 1;

  float doc_count = 2;

}
message FiltersAggregate {


  google.protobuf.Struct meta = 1;

  BucketsFiltersBucket buckets = 2;

}
message FiltersAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsQueryContainer filters = 3;

  // Set to `true` to add a bucket to the response which will contain all documents that do not match any of the given filters.
  bool other_bucket = 4;

  // The key with which the other bucket is returned.
  string other_bucket_key = 5;

  // By default, the named filters aggregation returns the buckets as an object. Set to `false` to return the buckets as an array of objects.
  bool keyed = 6;

}
message FiltersBucket {


  float doc_count = 1;

}
message FiltersBucketArray {


  repeated FiltersBucket filters_bucket_array = 1;

}
message FiltersBucketMap {


  map<string, FiltersBucket> filters_bucket_map = 1;

}
message FingerprintAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_FINGERPRINT = 1;
  }

  Type type = 1;

  string version = 2;

  int32 max_output_size = 3;

  bool preserve_original = 4;

  string separator = 5;

  // Language value, such as `arabic` or `thai`. Defaults to `english`. Each language value corresponds to a predefined list of stop words in Lucene. See Stop words by language for supported language values and their stop words. Also accepts an array of stop words.
  StringOrStringArray stopwords = 6;

  string stopwords_path = 7;

}
message FloatMap {


  map<string, float> float_map = 1;

}
message FormatMetricAggregationBase {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  string format = 4;

}
message FormattableMetricAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  string format = 4;

}
enum FunctionBoostMode {
  FUNCTION_BOOST_MODE_UNSPECIFIED = 0;
  FUNCTION_BOOST_MODE_AVG = 1;
  FUNCTION_BOOST_MODE_MAX = 2;
  FUNCTION_BOOST_MODE_MIN = 3;
  FUNCTION_BOOST_MODE_MULTIPLY = 4;
  FUNCTION_BOOST_MODE_REPLACE = 5;
  FUNCTION_BOOST_MODE_SUM = 6;
}
message FunctionScoreContainer {


  QueryContainer filter = 1;

  float weight = 2;

  DecayFunction exp = 3;

  DecayFunction gauss = 4;

  DecayFunction linear = 5;

  FieldValueFactorScoreFunction field_value_factor = 6;

  RandomScoreFunction random_score = 7;

  ScriptScoreFunction script_score = 8;

}
enum FunctionScoreMode {
  FUNCTION_SCORE_MODE_UNSPECIFIED = 0;
  FUNCTION_SCORE_MODE_AVG = 1;
  FUNCTION_SCORE_MODE_FIRST = 2;
  FUNCTION_SCORE_MODE_MAX = 3;
  FUNCTION_SCORE_MODE_MIN = 4;
  FUNCTION_SCORE_MODE_MULTIPLY = 5;
  FUNCTION_SCORE_MODE_SUM = 6;
}
message FunctionScoreQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  FunctionBoostMode boost_mode = 3;

  // One or more functions that compute a new score for each document returned by the query.
  repeated FunctionScoreContainer functions = 4;

  // Restricts the new score to not exceed the provided limit.
  float max_boost = 5;

  // Excludes documents that do not meet the provided score threshold.
  float min_score = 6;

  QueryContainer query = 7;

  FunctionScoreMode score_mode = 8;

}
message Fuzziness {

    oneof fuzziness {
        string string = 1;

        int32 int32 = 2;

    }

}
message FuzzyQuery {

    oneof fuzzy_query {
        FieldValue value = 1;

        FuzzyQueryOneOf fuzzy_query_one_of = 2;

    }

}
message FuzzyQueryOneOf {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Maximum number of variations created.
  int32 max_expansions = 3;

  // Number of beginning characters left unchanged when creating expansions.
  int32 prefix_length = 4;

  MultiTermQueryRewrite rewrite = 5;

  // Indicates whether edits include transpositions of two adjacent characters (for example, `ab` to `ba`).
  bool transpositions = 6;

  Fuzziness fuzziness = 7;

  // Term you wish to find in the provided field.
  FieldValue value = 8;

}
enum GapPolicy {
  GAP_POLICY_UNSPECIFIED = 0;
  GAP_POLICY_INSERT_ZEROS = 1;
  GAP_POLICY_KEEP_VALUES = 2;
  GAP_POLICY_SKIP = 3;
}
message GeoBoundingBoxQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  GeoExecution type = 3;

  GeoValidationMethod validation_method = 4;

  // Set to `true` to ignore an unmapped field and not match any documents for this query. Set to `false` to throw an exception if the field is not mapped.
  bool ignore_unmapped = 5;

}
message GeoBounds {

    oneof geo_bounds {
        CoordsGeoBounds coords = 1;

        TopLeftBottomRightGeoBounds tlbr = 2;

        TopRightBottomLeftGeoBounds trbl = 3;

        WktGeoBounds wkt = 4;

    }

}
message GeoBoundsAggregate {


  google.protobuf.Struct meta = 1;

  GeoBounds bounds = 2;

}
message GeoBoundsAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  // Specifies whether the bounding box should be allowed to overlap the international date line.
  bool wrap_longitude = 4;

}
message GeoCentroidAggregate {


  google.protobuf.Struct meta = 1;

  float count = 2;

  GeoLocation location = 3;

}
message GeoCentroidAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  int64 count = 4;

  GeoLocation location = 5;

}
message GeoDecayPlacement {


  double decay = 1;

  string offset = 2;

  GeoLocation origin = 3;

  string scale = 4;

}
message GeoDistanceAggregate {


  google.protobuf.Struct meta = 1;

  BucketsRangeBucket buckets = 2;

}
message GeoDistanceAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  GeoDistanceType distance_type = 3;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 4;

  GeoLocation origin = 5;

  // An array of ranges used to bucket documents.
  repeated AggregationRange ranges = 6;

  DistanceUnit unit = 7;

}
message GeoDistanceQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  string distance = 3;

  GeoDistanceType distance_type = 4;

  GeoValidationMethod validation_method = 5;

  // Set to `true` to ignore an unmapped field and not match any documents for this query. Set to `false` to throw an exception if the field is not mapped.
  bool ignore_unmapped = 6;

}
message GeoDistanceSort {


  SortMode mode = 1;

  GeoDistanceType distance_type = 2;

  bool ignore_unmapped = 3;

  SortOrder order = 4;

  DistanceUnit unit = 5;

}
enum GeoDistanceType {
  GEO_DISTANCE_TYPE_UNSPECIFIED = 0;
  GEO_DISTANCE_TYPE_ARC = 1;
  GEO_DISTANCE_TYPE_PLANE = 2;
}
enum GeoExecution {
  GEO_EXECUTION_UNSPECIFIED = 0;
  GEO_EXECUTION_INDEXED = 1;
  GEO_EXECUTION_MEMORY = 2;
}
message GeoHash {


}
message GeoHashGridAggregate {


  google.protobuf.Struct meta = 1;

  BucketsGeoHashGridBucket buckets = 2;

}
message GeoHashGridAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  GeoBounds bounds = 3;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 4;

  GeoHashPrecision precision = 5;

  // Allows for more accurate counting of the top cells returned in the final result the aggregation. Defaults to returning `max(10,(size x number-of-shards))` buckets from each shard.
  int32 shard_size = 6;

  // The maximum number of geohash buckets to return.
  int32 size = 7;

}
message GeoHashGridBucket {


  float doc_count = 1;

  string key = 2;

}
message GeoHashGridBucketArray {


  repeated GeoHashGridBucket geo_hash_grid_bucket_array = 1;

}
message GeoHashGridBucketMap {


  map<string, GeoHashGridBucket> geo_hash_grid_bucket_map = 1;

}
message GeoHashLocation {


  string geohash = 1;

}
message GeoHashPrecision {

    oneof geo_hash_precision {
        int32 geohash_length = 1;

        string distance = 2;

    }

}
message GeoLine {


  // Always `\"LineString\"`
  string type = 1;

  // An array of `[lon, lat]` coordinates.
  repeated DoubleArray coordinates = 2;

}
message GeoLineAggregate {


  google.protobuf.Struct meta = 1;

  string type = 2;

  GeoLine geometry = 3;

  google.protobuf.Struct properties = 4;

}
message GeoLineAggregation {


  GeoLinePoint point = 1;

  GeoLineSort sort = 2;

  // When `true`, returns an additional array of the sort values in the feature properties.
  bool include_sort = 3;

  SortOrder sort_order = 4;

  // The maximum length of the line represented in the aggregation. Valid sizes are between 1 and 10000.
  int32 size = 5;

}
message GeoLinePoint {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

}
message GeoLineSort {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

}
message GeoLocation {

    oneof geo_location {
        LatLonGeoLocation latlon = 1;

        GeoHashLocation geohash = 2;

        DoubleArray double_array = 3;

        string text = 4;

    }

}
message GeoLocationArray {


  repeated GeoLocation geo_location_array = 1;

}
message GeoPolygonPoints {


  repeated GeoLocation points = 1;

}
message GeoPolygonQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  GeoValidationMethod validation_method = 3;

  // Set to `true` to ignore an unmapped field and not match any documents for this query. Set to `false` to throw an exception if the field is not mapped.
  bool ignore_unmapped = 4;

}
message GeoShape {


  string type = 1;

  repeated google.protobuf.Struct coordinates = 2;

}
message GeoShapeQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Set to `true` to ignore an unmapped field and not match any documents for this query. Set to `false` to throw an exception if the field is not mapped.
  bool ignore_unmapped = 3;

}
message GeoShapeQueryField {


  FieldLookup indexed_shape = 1;

  GeoShape shape = 2;

  GeoShapeRelation relation = 3;

}
enum GeoShapeRelation {
  GEO_SHAPE_RELATION_UNSPECIFIED = 0;
  GEO_SHAPE_RELATION_CONTAINS = 1;
  GEO_SHAPE_RELATION_DISJOINT = 2;
  GEO_SHAPE_RELATION_INTERSECTS = 3;
  GEO_SHAPE_RELATION_WITHIN = 4;
}
message GeoTile {


}
message GeoTileGridAggregate {


  google.protobuf.Struct meta = 1;

  BucketsGeoTileGridBucket buckets = 2;

}
message GeoTileGridAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 3;

  float precision = 4;

  // Allows for more accurate counting of the top cells returned in the final result the aggregation. Defaults to returning `max(10,(size x number-of-shards))` buckets from each shard.
  int32 shard_size = 5;

  // The maximum number of buckets to return.
  int32 size = 6;

  GeoBounds bounds = 7;

}
message GeoTileGridBucket {


  float doc_count = 1;

  // A map tile reference, represented as `{zoom}/{x}/{y}`.
  string key = 2;

}
message GeoTileGridBucketArray {


  repeated GeoTileGridBucket geo_tile_grid_bucket_array = 1;

}
message GeoTileGridBucketMap {


  map<string, GeoTileGridBucket> geo_tile_grid_bucket_map = 1;

}
message GeoTilePrecision {


}
enum GeoValidationMethod {
  GEO_VALIDATION_METHOD_UNSPECIFIED = 0;
  GEO_VALIDATION_METHOD_COERCE = 1;
  GEO_VALIDATION_METHOD_IGNORE_MALFORMED = 2;
  GEO_VALIDATION_METHOD_STRICT = 3;
}
message GetResult {


  string type = 1 [json_name="_type"];

  string index = 2 [json_name="_index"];

  map<string, google.protobuf.Struct> fields = 3;

  bool found = 4;

  string id = 5 [json_name="_id"];

  float primary_term = 6 [json_name="_primary_term"];

  string routing = 7 [json_name="_routing"];

  int64 seq_no = 8 [json_name="_seq_no"];

  google.protobuf.Struct source = 9 [json_name="_source"];

  int64 version = 10 [json_name="_version"];

}
message GlobalAggregate {


  google.protobuf.Struct meta = 1;

  float doc_count = 2;

}
message GlobalAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

}
message GoogleNormalizedDistanceHeuristic {


  // Set to `false` if you defined a custom background filter that represents a different set of documents that you want to compare to.
  bool background_is_superset = 1;

}
message HasChildQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Set to `true` to ignore an unmapped field and not match any documents for this query. Set to `false` to throw an exception if the field is not mapped.
  bool ignore_unmapped = 3;

  InnerHits inner_hits = 4;

  // Maximum number of child documents that match the query allowed for a returned parent document. If the parent document exceeds this limit, it is excluded from the search results.
  int32 max_children = 5;

  // Minimum number of child documents that match the query required to match the query for a returned parent document. If the parent document does not meet this limit, it is excluded from the search results.
  int32 min_children = 6;

  QueryContainer query = 7;

  ChildScoreMode score_mode = 8;

  string type = 9;

}
message HasParentQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Set to `true` to ignore an unmapped field and not match any documents for this query. Set to `false` to throw an exception if the field is not mapped.
  bool ignore_unmapped = 3;

  InnerHits inner_hits = 4;

  string parent_type = 5;

  QueryContainer query = 6;

  // Indicates whether the relevance score of a matching parent document is aggregated into its child documents.
  bool score = 7;

}
message HdrMethod {


  // Specifies the resolution of values for the histogram in number of significant digits.
  int32 number_of_significant_value_digits = 1;

}
message HdrPercentileRanksAggregate {


  google.protobuf.Struct meta = 1;

  Percentiles values = 2;

}
message HdrPercentilesAggregate {


  google.protobuf.Struct meta = 1;

  Percentiles values = 2;

}
message Highlight {


  HighlighterType type = 1;

  // A string that contains each boundary character.
  string boundary_chars = 2;

  // How far to scan for boundary characters.
  int32 boundary_max_scan = 3;

  BoundaryScanner boundary_scanner = 4;

  // Controls which locale is used to search for sentence and word boundaries. This parameter takes the form of a language tag, for example, `\"en-US\"`, `\"fr-FR\"`, or `\"ja-JP\"`.
  string boundary_scanner_locale = 5;

  bool force_source = 6;

  HighlighterFragmenter fragmenter = 7;

  int32 fragment_offset = 8;

  // The size of the highlighted fragment in characters.
  int32 fragment_size = 9;

  bool highlight_filter = 10;

  QueryContainer highlight_query = 11;

  int32 max_fragment_length = 12;

  // If set to a non-negative value, highlighting stops at this defined maximum limit. The rest of the text is not processed or highlighted, and no error is returned. The `max_analyzer_offset` query setting does not override the `index.highlight.max_analyzed_offset` setting, which takes precedence when it is set to a lower value than the query setting.
  int32 max_analyzer_offset = 13;

  // The amount of text you want to return from the beginning of the field if there are no matching fragments to highlight.
  int32 no_match_size = 14;

  // The maximum number of fragments to return. When the number of fragments is set to `0`, no fragments are returned. Instead, the entirety of a field's contents are highlighted and returned. This is useful when you need to highlight short texts, such as a title or address, in which fragmentation is not required. If `number_of_fragments` is set to `0`, the `fragment_size` is ignored.
  int32 number_of_fragments = 15;

  map<string, google.protobuf.Struct> options = 16;

  HighlighterOrder order = 17;

  // Controls the number of matching phrases in a document that are considered. This prevents the `fvh` highlighter from analyzing too many phrases and consuming too much memory. When using `matched_fields`, phrase-limited phrases per matched field are considered. Raising the limit increases the query time and consumes more memory. This setting is only supported by the `fvh` highlighter.
  int32 phrase_limit = 18;

  // When used in conjunction with `pre_tags`, defines the HTML tags to use for the highlighted text. By default, highlighted text is wrapped in `<em>` and `</em>` tags.
  repeated string post_tags = 19;

  // When used in conjunction with `post_tags`, defines the HTML tags to use for the highlighted text. By default, highlighted text is wrapped in `<em>` and `</em>` tags.
  repeated string pre_tags = 20;

  // By default, only fields that contains a query match are highlighted. Set to `false` to highlight all fields.
  bool require_field_match = 21;

  HighlighterTagsSchema tags_schema = 22;

  HighlighterEncoder encoder = 23;

  map<string, HighlightField> fields = 24;

}
message HighlightBase {


  HighlighterType type = 1;

  // A string that contains each boundary character.
  string boundary_chars = 2;

  // How far to scan for boundary characters.
  int32 boundary_max_scan = 3;

  BoundaryScanner boundary_scanner = 4;

  // Controls which locale is used to search for sentence and word boundaries. This parameter takes the form of a language tag, for example, `\"en-US\"`, `\"fr-FR\"`, or `\"ja-JP\"`.
  string boundary_scanner_locale = 5;

  bool force_source = 6;

  HighlighterFragmenter fragmenter = 7;

  int32 fragment_offset = 8;

  // The size of the highlighted fragment in characters.
  int32 fragment_size = 9;

  bool highlight_filter = 10;

  QueryContainer highlight_query = 11;

  int32 max_fragment_length = 12;

  // If set to a non-negative value, highlighting stops at this defined maximum limit. The rest of the text is not processed or highlighted, and no error is returned. The `max_analyzer_offset` query setting does not override the `index.highlight.max_analyzed_offset` setting, which takes precedence when it is set to a lower value than the query setting.
  int32 max_analyzer_offset = 13;

  // The amount of text you want to return from the beginning of the field if there are no matching fragments to highlight.
  int32 no_match_size = 14;

  // The maximum number of fragments to return. When the number of fragments is set to `0`, no fragments are returned. Instead, the entirety of a field's contents are highlighted and returned. This is useful when you need to highlight short texts, such as a title or address, in which fragmentation is not required. If `number_of_fragments` is set to `0`, the `fragment_size` is ignored.
  int32 number_of_fragments = 15;

  map<string, google.protobuf.Struct> options = 16;

  HighlighterOrder order = 17;

  // Controls the number of matching phrases in a document that are considered. This prevents the `fvh` highlighter from analyzing too many phrases and consuming too much memory. When using `matched_fields`, phrase-limited phrases per matched field are considered. Raising the limit increases the query time and consumes more memory. This setting is only supported by the `fvh` highlighter.
  int32 phrase_limit = 18;

  // When used in conjunction with `pre_tags`, defines the HTML tags to use for the highlighted text. By default, highlighted text is wrapped in `<em>` and `</em>` tags.
  repeated string post_tags = 19;

  // When used in conjunction with `post_tags`, defines the HTML tags to use for the highlighted text. By default, highlighted text is wrapped in `<em>` and `</em>` tags.
  repeated string pre_tags = 20;

  // By default, only fields that contains a query match are highlighted. Set to `false` to highlight all fields.
  bool require_field_match = 21;

  HighlighterTagsSchema tags_schema = 22;

}
message HighlightField {


  HighlighterType type = 1;

  // A string that contains each boundary character.
  string boundary_chars = 2;

  // How far to scan for boundary characters.
  int32 boundary_max_scan = 3;

  BoundaryScanner boundary_scanner = 4;

  // Controls which locale is used to search for sentence and word boundaries. This parameter takes the form of a language tag, for example, `\"en-US\"`, `\"fr-FR\"`, or `\"ja-JP\"`.
  string boundary_scanner_locale = 5;

  bool force_source = 6;

  HighlighterFragmenter fragmenter = 7;

  int32 fragment_offset = 8;

  // The size of the highlighted fragment in characters.
  int32 fragment_size = 9;

  bool highlight_filter = 10;

  QueryContainer highlight_query = 11;

  int32 max_fragment_length = 12;

  // If set to a non-negative value, highlighting stops at this defined maximum limit. The rest of the text is not processed or highlighted, and no error is returned. The `max_analyzer_offset` query setting does not override the `index.highlight.max_analyzed_offset` setting, which takes precedence when it is set to a lower value than the query setting.
  int32 max_analyzer_offset = 13;

  // The amount of text you want to return from the beginning of the field if there are no matching fragments to highlight.
  int32 no_match_size = 14;

  // The maximum number of fragments to return. When the number of fragments is set to `0`, no fragments are returned. Instead, the entirety of a field's contents are highlighted and returned. This is useful when you need to highlight short texts, such as a title or address, in which fragmentation is not required. If `number_of_fragments` is set to `0`, the `fragment_size` is ignored.
  int32 number_of_fragments = 15;

  map<string, google.protobuf.Struct> options = 16;

  HighlighterOrder order = 17;

  // Controls the number of matching phrases in a document that are considered. This prevents the `fvh` highlighter from analyzing too many phrases and consuming too much memory. When using `matched_fields`, phrase-limited phrases per matched field are considered. Raising the limit increases the query time and consumes more memory. This setting is only supported by the `fvh` highlighter.
  int32 phrase_limit = 18;

  // When used in conjunction with `pre_tags`, defines the HTML tags to use for the highlighted text. By default, highlighted text is wrapped in `<em>` and `</em>` tags.
  repeated string post_tags = 19;

  // When used in conjunction with `post_tags`, defines the HTML tags to use for the highlighted text. By default, highlighted text is wrapped in `<em>` and `</em>` tags.
  repeated string pre_tags = 20;

  // By default, only fields that contains a query match are highlighted. Set to `false` to highlight all fields.
  bool require_field_match = 21;

  HighlighterTagsSchema tags_schema = 22;

  Fields matched_fields = 23;

  Analyzer analyzer = 24;

}
enum HighlighterEncoder {
  HIGHLIGHTER_ENCODER_UNSPECIFIED = 0;
  HIGHLIGHTER_ENCODER_DEFAULT = 1;
  HIGHLIGHTER_ENCODER_HTML = 2;
}
enum HighlighterFragmenter {
  HIGHLIGHTER_FRAGMENTER_UNSPECIFIED = 0;
  HIGHLIGHTER_FRAGMENTER_SIMPLE = 1;
  HIGHLIGHTER_FRAGMENTER_SPAN = 2;
}
enum HighlighterOrder {
  HIGHLIGHTER_ORDER_UNSPECIFIED = 0;
  HIGHLIGHTER_ORDER_SCORE = 1;
}
enum HighlighterTagsSchema {
  HIGHLIGHTER_TAGS_SCHEMA_UNSPECIFIED = 0;
  HIGHLIGHTER_TAGS_SCHEMA_STYLED = 1;
}
message HighlighterType {

    oneof highlighter_type {
        BuiltinHighlighterType builtin = 1;

        string custom = 2;

    }

}
message HistogramAggregate {


  google.protobuf.Struct meta = 1;

  BucketsHistogramBucket buckets = 2;

}
message HistogramAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  ExtendedBoundsdouble extended_bounds = 3;

  ExtendedBoundsdouble hard_bounds = 4;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 5;

  // The interval for the buckets. Must be a positive decimal.
  double interval = 6;

  // Only returns buckets that have `min_doc_count` number of documents. By default, the response will fill gaps in the histogram with empty buckets.
  int32 min_doc_count = 7;

  // The value to apply to documents that do not have a value. By default, documents without a value are ignored.
  double missing = 8;

  // By default, the bucket keys start with 0 and then continue in even spaced steps of `interval`. The bucket boundaries can be shifted by using the `offset` option.
  double offset = 9;

  HistogramOrder order = 10;

  Script script = 11;

  string format = 12;

  // If `true`, returns buckets as a hash instead of an array, keyed by the bucket keys.
  bool keyed = 13;

}
message HistogramBucket {


  float doc_count = 1;

  string key_as_string = 2;

  float key = 3;

}
message HistogramBucketArray {


  repeated HistogramBucket histogram_bucket_array = 1;

}
message HistogramBucketMap {


  map<string, HistogramBucket> histogram_bucket_map = 1;

}
message HistogramOrder {


  SortOrder count = 1 [json_name="_count"];

  SortOrder key = 2 [json_name="_key"];

}
message Hit {


  string type = 1 [json_name="_type"];

  string index = 2 [json_name="_index"];

  string id = 3 [json_name="_id"];

  HitScore score = 4 [json_name="_score"];

  Explanation explanation = 5 [json_name="_explanation"];

  google.protobuf.Struct fields = 6;

  map<string, StringArray> highlight = 7;

  map<string, InnerHitsResult> inner_hits = 8;

  repeated string matched_queries = 9;

  NestedIdentity nested = 10 [json_name="_nested"];

  repeated string ignored = 11 [json_name="_ignored"];

  map<string, StringArray> ignored_field_values = 12;

  string shard = 13 [json_name="_shard"];

  string node = 14 [json_name="_node"];

  string routing = 15 [json_name="_routing"];

  google.protobuf.Struct source = 16 [json_name="_source"];

  int64 seq_no = 17 [json_name="_seq_no"];

  int64 primary_term = 18 [json_name="_primary_term"];

  int64 version = 19 [json_name="_version"];

  repeated FieldValue sort = 20;

}
message HitScore {


  float float = 1;

  string string = 2;

}
message HitsMetadata {


  HitsMetadataTotal total = 1;

  repeated Hit hits = 2;

  HitsMetadataMaxScore max_score = 3;

}
message HitsMetadataMaxScore {


  float float = 1;

  string string = 2;

}
message HitsMetadataTotal {

    oneof hits_metadata_total {
        TotalHits total_hits = 1;

        int64 int64 = 2;

    }

}
message HoltLinearModelSettings {


  float alpha = 1;

  float beta = 2;

}
message HoltMovingAverageAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  bool minimize = 6;

  int32 predict = 7;

  int32 window = 8;

  enum Model {
    MODEL_UNSPECIFIED = 0;
    MODEL_HOLT = 1;
  }

  Model model = 9;

  HoltLinearModelSettings settings = 10;

}
message HoltWintersModelSettings {


  float alpha = 1;

  float beta = 2;

  float gamma = 3;

  bool pad = 4;

  int32 period = 5;

  HoltWintersType type = 6;

}
message HoltWintersMovingAverageAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  bool minimize = 6;

  int32 predict = 7;

  int32 window = 8;

  enum Model {
    MODEL_UNSPECIFIED = 0;
    MODEL_HOLT_WINTERS = 1;
  }

  Model model = 9;

  HoltWintersModelSettings settings = 10;

}
message HoltWintersType {

    oneof holt_winters_type {
        Additive additive = 1;

        Multiplicative multiplicative = 2;

    }

}
enum Hour {
  HOUR_UNSPECIFIED = 0;
  HOUR_HOUR = 1;
  HOUR_1H = 2;
}
message HybridQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  repeated QueryContainer queries = 3;

}
message IcuAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_ICU_ANALYZER = 1;
  }

  Type type = 1;

  IcuNormalizationType method = 2;

  IcuNormalizationMode mode = 3;

}
enum IcuNormalizationMode {
  ICU_NORMALIZATION_MODE_UNSPECIFIED = 0;
  ICU_NORMALIZATION_MODE_COMPOSE = 1;
  ICU_NORMALIZATION_MODE_DECOMPOSE = 2;
}
enum IcuNormalizationType {
  ICU_NORMALIZATION_TYPE_UNSPECIFIED = 0;
  ICU_NORMALIZATION_TYPE_NFC = 1;
  ICU_NORMALIZATION_TYPE_NFKC = 2;
  ICU_NORMALIZATION_TYPE_NFKC_CF = 3;
}
message Id {


}
message Ids {

    oneof ids {
        string string = 1;

        StringArray string_array = 2;

    }

}
message IdsQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  Ids values = 3;

}
message IgnoreUnmapped {


}
enum Inches {
  INCHES_UNSPECIFIED = 0;
  INCHES_IN = 1;
}
message IndexName {


}
message IndexOperation {


}
message Indices {

    oneof indices {
        string string = 1;

        StringArray string_array = 2;

    }

}
message InferenceAggregate {


  google.protobuf.Struct meta = 1;

  FieldValue value = 2;

  repeated InferenceFeatureImportance feature_importance = 3;

  repeated InferenceTopClassEntry top_classes = 4;

  string warning = 5;

}
message InferenceAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  string model_id = 6;

  InferenceConfigContainer inference_config = 7;

}
message InferenceClassImportance {


  string class_name = 1;

  float importance = 2;

}
message InferenceConfigContainer {


  RegressionInferenceOptions regression = 1;

  ClassificationInferenceOptions classification = 2;

}
message InferenceFeatureImportance {


  string feature_name = 1;

  float importance = 2;

  repeated InferenceClassImportance classes = 3;

}
message InferenceTopClassEntry {


  FieldValue class_name = 1;

  float class_probability = 2;

  float class_score = 3;

}
message InlineGet {


  map<string, google.protobuf.Struct> fields = 1;

  bool found = 2;

  int64 seq_no = 3 [json_name="_seq_no"];

  float primary_term = 4 [json_name="_primary_term"];

  string routing = 5 [json_name="_routing"];

  google.protobuf.Struct source = 6 [json_name="_source"];

}
message InlineGetDictUserDefined {


  map<string, google.protobuf.Struct> fields = 1;

  bool found = 2;

  int64 seq_no = 3 [json_name="_seq_no"];

  int32 primary_term = 4 [json_name="_primary_term"];

  string routing = 5 [json_name="_routing"];

  google.protobuf.Struct source = 6 [json_name="_source"];

}
message InlineObject {


  bool errors = 1;

  repeated ResponseItemMap items = 2;

  int64 took = 3;

  int64 ingest_took = 4;

}
message InlineObject1 {


  string type = 1 [json_name="_type"];

  string index = 2 [json_name="_index"];

  string id = 3 [json_name="_id"];

  bool matched = 4;

  ExplanationDetail explanation = 5;

  InlineGet get = 6;

}
message InlineScript {

    oneof inline_script {
        string source = 1;

        InlineScriptOneOf inline_script_one_of = 2;

    }

}
message InlineScriptOneOf {


  // Specifies any named parameters that are passed into the script as variables.  Use parameters instead of hard-coded values to decrease compilation time. 
  google.protobuf.Struct params = 1;

  ScriptLanguage lang = 2;

  map<string, string> options = 3;

  // The script source.
  string source = 4;

}
message InnerHits {


  string name = 1;

  // The maximum number of hits to return per `inner_hits`.
  int32 size = 2;

  // The inner hit that initiates document offset.
  int32 from = 3;

  FieldCollapse collapse = 4;

  repeated FieldAndFormat docvalue_fields = 5;

  bool explain = 6;

  Highlight highlight = 7;

  bool ignore_unmapped = 8;

  map<string, ScriptField> script_fields = 9;

  bool seq_no_primary_term = 10;

  Fields fields = 11;

  Sort sort = 12;

  SourceConfig source = 13 [json_name="_source"];

  Fields stored_fields = 14;

  bool track_scores = 15;

  bool version = 16;

}
message InnerHitsArray {


  repeated InnerHits inner_hits_array = 1;

}
message InnerHitsResult {


  HitsMetadata hits = 1;

}
message IntervalsAllOf {


  // An array of rules to combine. All rules must produce a match in a document for the overall source to match.
  repeated IntervalsContainer intervals = 1;

  // Maximum number of positions between the matching terms. Intervals produced by the rules further apart than this are not considered matches.
  int32 max_gaps = 2;

  // If `true`, intervals produced by the rules should appear in the order in which they are specified.
  bool ordered = 3;

  IntervalsFilter filter = 4;

}
message IntervalsAnyOf {


  // An array of rules to match.
  repeated IntervalsContainer intervals = 1;

  IntervalsFilter filter = 2;

}
message IntervalsContainer {


  IntervalsAllOf all_of = 1;

  IntervalsAnyOf any_of = 2;

  IntervalsFuzzy fuzzy = 3;

  IntervalsMatch match = 4;

  IntervalsPrefix prefix = 5;

  IntervalsWildcard wildcard = 6;

}
message IntervalsFilter {


  IntervalsContainer after = 1;

  IntervalsContainer before = 2;

  IntervalsContainer contained_by = 3;

  IntervalsContainer containing = 4;

  IntervalsContainer not_contained_by = 5;

  IntervalsContainer not_containing = 6;

  IntervalsContainer not_overlapping = 7;

  IntervalsContainer overlapping = 8;

  Script script = 9;

}
message IntervalsFuzzy {


  // Analyzer used to normalize the term.
  string analyzer = 1;

  Fuzziness fuzziness = 2;

  // Number of beginning characters left unchanged when creating expansions.
  int32 prefix_length = 3;

  // The term to match.
  string term = 4;

  // Indicates whether edits include transpositions of two adjacent characters (for example, `ab` to `ba`).
  bool transpositions = 5;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string use_field = 6;

}
message IntervalsMatch {


  // Analyzer used to analyze terms in the query.
  string analyzer = 1;

  // Maximum number of positions between the matching terms. Terms further apart than this are not considered matches.
  int32 max_gaps = 2;

  // If `true`, matching terms must appear in their specified order.
  bool ordered = 3;

  // Text you wish to find in the provided field.
  string query = 4;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string use_field = 5;

  IntervalsFilter filter = 6;

}
message IntervalsPrefix {


  // Analyzer used to analyze the `prefix`.
  string analyzer = 1;

  // Beginning characters of terms you wish to find in the top-level field.
  string prefix = 2;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string use_field = 3;

}
message IntervalsQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  IntervalsAllOf all_of = 3;

  IntervalsAnyOf any_of = 4;

  IntervalsFuzzy fuzzy = 5;

  IntervalsMatch match = 6;

  IntervalsPrefix prefix = 7;

  IntervalsWildcard wildcard = 8;

}
message IntervalsWildcard {


  // Analyzer used to analyze the `pattern`. Defaults to the top-level field's analyzer.
  string analyzer = 1;

  // Wildcard pattern used to find matching terms.
  string pattern = 2;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string use_field = 3;

}
message IpRangeAggregate {


  google.protobuf.Struct meta = 1;

  BucketsIpRangeBucket buckets = 2;

}
message IpRangeAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 3;

  // Array of IP ranges.
  repeated IpRangeAggregationRange ranges = 4;

}
message IpRangeAggregationRange {


  // Start of the range.
  optional string from = 1;

  // IP range defined as a CIDR mask.
  string mask = 2;

  // End of the range.
  optional string to = 3;

}
message IpRangeBucket {


  float doc_count = 1;

  string key = 2;

  string from = 3;

  string to = 4;

}
message IpRangeBucketArray {


  repeated IpRangeBucket ip_range_bucket_array = 1;

}
message IpRangeBucketMap {


  map<string, IpRangeBucket> ip_range_bucket_map = 1;

}
message KeyedPercentilesValue {


  float float = 1;

  string string = 2;

}
message KeyedPercentilesValueMap {


  map<string, KeyedPercentilesValue> keyed_percentiles_value_map = 1;

}
message KeywordAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_KEYWORD = 1;
  }

  Type type = 1;

  string version = 2;

}
enum Kilometers {
  KILOMETERS_UNSPECIFIED = 0;
  KILOMETERS_KM = 1;
}
message KnnQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  repeated float vector = 3;

  // The total number of nearest neighbors to return as top hits.
  int32 k = 4;

  // The minimum similarity score required in order for a neighbor to be considered a hit.
  float min_score = 5;

  // The maximum physical vector space distance required in order for a neighbor to be considered a hit.
  float max_distance = 6;

  // The filter for the k-NN search query.
  QueryContainer filter = 7;

  google.protobuf.Struct method_parameters = 8;

  KnnQueryRescore rescore = 9;

  bool expand_nested_docs = 10;

}
message KnnQueryRescore {

    oneof knn_query_rescore {
        bool enable = 1;

        RescoreContext context = 2;

    }

}
message KuromojiAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_KUROMOJI = 1;
  }

  Type type = 1;

  KuromojiTokenizationMode mode = 2;

  string user_dictionary = 3;

}
enum KuromojiTokenizationMode {
  KUROMOJI_TOKENIZATION_MODE_UNSPECIFIED = 0;
  KUROMOJI_TOKENIZATION_MODE_EXTENDED = 1;
  KUROMOJI_TOKENIZATION_MODE_NORMAL = 2;
  KUROMOJI_TOKENIZATION_MODE_SEARCH = 3;
}
enum Language {
  LANGUAGE_UNSPECIFIED = 0;
  LANGUAGE_ARABIC = 1;
  LANGUAGE_ARMENIAN = 2;
  LANGUAGE_BASQUE = 3;
  LANGUAGE_BRAZILIAN = 4;
  LANGUAGE_BULGARIAN = 5;
  LANGUAGE_CATALAN = 6;
  LANGUAGE_CHINESE = 7;
  LANGUAGE_CJK = 8;
  LANGUAGE_CZECH = 9;
  LANGUAGE_DANISH = 10;
  LANGUAGE_DUTCH = 11;
  LANGUAGE_ENGLISH = 12;
  LANGUAGE_ESTONIAN = 13;
  LANGUAGE_FINNISH = 14;
  LANGUAGE_FRENCH = 15;
  LANGUAGE_GALICIAN = 16;
  LANGUAGE_GERMAN = 17;
  LANGUAGE_GREEK = 18;
  LANGUAGE_HINDI = 19;
  LANGUAGE_HUNGARIAN = 20;
  LANGUAGE_INDONESIAN = 21;
  LANGUAGE_IRISH = 22;
  LANGUAGE_ITALIAN = 23;
  LANGUAGE_LATVIAN = 24;
  LANGUAGE_NORWEGIAN = 25;
  LANGUAGE_PERSIAN = 26;
  LANGUAGE_PORTUGUESE = 27;
  LANGUAGE_ROMANIAN = 28;
  LANGUAGE_RUSSIAN = 29;
  LANGUAGE_SORANI = 30;
  LANGUAGE_SPANISH = 31;
  LANGUAGE_SWEDISH = 32;
  LANGUAGE_THAI = 33;
  LANGUAGE_TURKISH = 34;
}
message LanguageAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_LANGUAGE = 1;
  }

  Type type = 1;

  string version = 2;

  Language language = 3;

  repeated string stem_exclusion = 4;

  // Language value, such as `arabic` or `thai`. Defaults to `english`. Each language value corresponds to a predefined list of stop words in Lucene. See Stop words by language for supported language values and their stop words. Also accepts an array of stop words.
  StringOrStringArray stopwords = 5;

  string stopwords_path = 6;

}
message LaplaceSmoothingModel {


  double alpha = 1;

}
message LatLonGeoLocation {


  // Latitude
  double lat = 1;

  // Longitude
  double lon = 2;

}
message Like {

    oneof like {
        string text = 1;

        LikeDocument document = 2;

    }

}
message LikeArray {


  repeated Like like_array = 1;

}
message LikeDocument {


  google.protobuf.Struct doc = 1;

  repeated string fields = 2;

  string id = 3 [json_name="_id"];

  string index = 4 [json_name="_index"];

  string type = 5 [json_name="_type"];

  map<string, string> per_field_analyzer = 6;

  string routing = 7;

  int64 version = 8;

  VersionType version_type = 9;

}
message LinearInterpolationSmoothingModel {


  double bigram_lambda = 1;

  double trigram_lambda = 2;

  double unigram_lambda = 3;

}
message LinearMovingAverageAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  bool minimize = 6;

  int32 predict = 7;

  int32 window = 8;

  enum Model {
    MODEL_UNSPECIFIED = 0;
    MODEL_LINEAR = 1;
  }

  Model model = 9;

  google.protobuf.Struct settings = 10;

}
message LongRareTermsAggregate {


  google.protobuf.Struct meta = 1;

  BucketsLongRareTermsBucket buckets = 2;

}
message LongRareTermsBucket {


  float doc_count = 1;

  string key_as_string = 2;

  float key = 3;

}
message LongRareTermsBucketArray {


  repeated LongRareTermsBucket long_rare_terms_bucket_array = 1;

}
message LongRareTermsBucketMap {


  map<string, LongRareTermsBucket> long_rare_terms_bucket_map = 1;

}
message LongTermsAggregate {


  google.protobuf.Struct meta = 1;

  BucketsLongTermsBucket buckets = 2;

  float doc_count_error_upper_bound = 3;

  float sum_other_doc_count = 4;

}
message LongTermsBucket {


  float doc_count = 1;

  float doc_count_error = 2;

  string key_as_string = 3;

  float key = 4;

}
message LongTermsBucketArray {


  repeated LongTermsBucket long_terms_bucket_array = 1;

}
message LongTermsBucketMap {


  map<string, LongTermsBucket> long_terms_bucket_map = 1;

}
message MatchAllQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

}
message MatchBoolPrefixQuery {

    oneof match_bool_prefix_query {
        string query = 1;

        MatchBoolPrefixQueryOneOf match_bool_prefix_query_one_of = 2;

    }

}
message MatchBoolPrefixQueryOneOf {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Analyzer used to convert the text in the query value into tokens.
  string analyzer = 3;

  Fuzziness fuzziness = 4;

  MultiTermQueryRewrite fuzzy_rewrite = 5;

  // If `true`, edits for fuzzy matching include transpositions of two adjacent characters (for example, `ab` to `ba`). Can be applied to the term subqueries constructed for all terms but the final term.
  bool fuzzy_transpositions = 6;

  // Maximum number of terms to which the query will expand. Can be applied to the term subqueries constructed for all terms but the final term.
  int32 max_expansions = 7;

  MinimumShouldMatch minimum_should_match = 8;

  Operator operator = 9;

  // Number of beginning characters left unchanged for fuzzy matching. Can be applied to the term subqueries constructed for all terms but the final term.
  int32 prefix_length = 10;

  // Terms you wish to find in the provided field. The last term is used in a prefix query.
  string query = 11;

}
message MatchNoneQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

}
message MatchPhrasePrefixQuery {

    oneof match_phrase_prefix_query {
        string query = 1;

        MatchPhrasePrefixQueryOneOf match_phrase_prefix_query_one_of = 2;

    }

}
message MatchPhrasePrefixQueryOneOf {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Analyzer used to convert text in the query value into tokens.
  string analyzer = 3;

  // Maximum number of terms to which the last provided term of the query value will expand.
  int32 max_expansions = 4;

  // Text you wish to find in the provided field.
  string query = 5;

  // Maximum number of positions allowed between matching tokens.
  int32 slop = 6;

  ZeroTermsQuery zero_terms_query = 7;

}
message MatchPhraseQuery {

    oneof match_phrase_query {
        string query = 1;

        MatchPhraseQueryOneOf match_phrase_query_one_of = 2;

    }

}
message MatchPhraseQueryOneOf {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Analyzer used to convert the text in the query value into tokens.
  string analyzer = 3;

  // Query terms that are analyzed and turned into a phrase query.
  string query = 4;

  // Maximum number of positions allowed between matching tokens.
  int32 slop = 5;

  ZeroTermsQuery zero_terms_query = 6;

}
message MatchQuery {

    oneof match_query {
        FieldValue query = 1;

        MatchQueryOneOf match_query_one_of = 2;

    }

}
message MatchQueryOneOf {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Analyzer used to convert the text in the query value into tokens.
  string analyzer = 3;

  // If `true`, match phrase queries are automatically created for multi-term synonyms.
  bool auto_generate_synonyms_phrase_query = 4;

  float cutoff_frequency = 5;

  Fuzziness fuzziness = 6;

  MultiTermQueryRewrite fuzzy_rewrite = 7;

  // If `true`, edits for fuzzy matching include transpositions of two adjacent characters (for example, `ab` to `ba`).
  bool fuzzy_transpositions = 8;

  // If `true`, format-based errors, such as providing a text query value for a numeric field, are ignored.
  bool lenient = 9;

  // Maximum number of terms to which the query will expand.
  int32 max_expansions = 10;

  MinimumShouldMatch minimum_should_match = 11;

  Operator operator = 12;

  // Number of beginning characters left unchanged for fuzzy matching.
  int32 prefix_length = 13;

  // Text, number, Boolean value or date you wish to find in the provided field.
  FieldValue query = 14;

  ZeroTermsQuery zero_terms_query = 15;

}
message MatrixAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  Fields fields = 3;

  // The value to apply to documents that do not have a value. By default, documents without a value are ignored.
  map<string, double> missing = 4;

}
message MatrixStatsAggregate {


  google.protobuf.Struct meta = 1;

  float doc_count = 2;

  repeated MatrixStatsFields fields = 3;

}
message MatrixStatsAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  Fields fields = 3;

  // The value to apply to documents that do not have a value. By default, documents without a value are ignored.
  map<string, double> missing = 4;

  SortMode mode = 5;

}
message MatrixStatsFields {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string name = 1;

  float count = 2;

  float mean = 3;

  float variance = 4;

  float skewness = 5;

  float kurtosis = 6;

  map<string, float> covariance = 7;

  map<string, float> correlation = 8;

}
message MaxAggregate {


  google.protobuf.Struct meta = 1;

  SingleMetricAggregateBaseAllOfValue value = 2;

  string value_as_string = 3;

}
message MaxAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  string format = 4;

}
message MaxBucketAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

}
message MedianAbsoluteDeviationAggregate {


  google.protobuf.Struct meta = 1;

  SingleMetricAggregateBaseAllOfValue value = 2;

  string value_as_string = 3;

}
message MedianAbsoluteDeviationAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  string format = 4;

  // Limits the maximum number of nodes used by the underlying TDigest algorithm to `20 * compression`, enabling control of memory usage and approximation error.
  double compression = 5;

}
enum Meters {
  METERS_UNSPECIFIED = 0;
  METERS_M = 1;
}
message MetricAggregationBase {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

}
enum Miles {
  MILES_UNSPECIFIED = 0;
  MILES_MI = 1;
}
enum Millimeters {
  MILLIMETERS_UNSPECIFIED = 0;
  MILLIMETERS_MM = 1;
}
message MinAggregate {


  google.protobuf.Struct meta = 1;

  SingleMetricAggregateBaseAllOfValue value = 2;

  string value_as_string = 3;

}
message MinAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  string format = 4;

}
message MinBucketAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

}
enum MinimumInterval {
  MINIMUM_INTERVAL_UNSPECIFIED = 0;
  MINIMUM_INTERVAL_DAY = 1;
  MINIMUM_INTERVAL_HOUR = 2;
  MINIMUM_INTERVAL_MINUTE = 3;
  MINIMUM_INTERVAL_MONTH = 4;
  MINIMUM_INTERVAL_SECOND = 5;
  MINIMUM_INTERVAL_YEAR = 6;
}
message MinimumShouldMatch {

    oneof minimum_should_match {
        int32 int32 = 1;

        string string = 2;

    }

}
enum Minute {
  MINUTE_UNSPECIFIED = 0;
  MINUTE_MINUTE = 1;
  MINUTE_1M = 2;
}
message MissingAggregate {


  google.protobuf.Struct meta = 1;

  float doc_count = 2;

}
message MissingAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 3;

  FieldValue missing = 4;

}
enum MissingOrder {
  MISSING_ORDER_UNSPECIFIED = 0;
  MISSING_ORDER_DEFAULT = 1;
  MISSING_ORDER_FIRST = 2;
  MISSING_ORDER_LAST = 3;
}
enum Month {
  MONTH_UNSPECIFIED = 0;
  MONTH_MONTH = 1;
  MONTH_1M = 2;
}
message MoreLikeThisQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // The analyzer that is used to analyze the free form text. Defaults to the analyzer associated with the first field in fields.
  string analyzer = 3;

  // Each term in the formed query could be further boosted by their tf-idf score. This sets the boost factor to use when using this feature. Defaults to deactivated (0).
  float boost_terms = 4;

  // Controls whether the query should fail (throw an exception) if any of the specified fields are not of the supported types (`text` or `keyword`).
  bool fail_on_unsupported_field = 5;

  // A list of fields to fetch and analyze the text from. Defaults to the `index.query.default_field` index setting, which has a default value of `*`.
  repeated string fields = 6;

  // Specifies whether the input documents should also be included in the search results returned.
  bool include = 7;

  MoreLikeThisQueryAllOfLike like = 8;

  // The maximum document frequency above which the terms are ignored from the input document.
  int32 max_doc_freq = 9;

  // The maximum number of query terms that can be selected.
  int32 max_query_terms = 10;

  // The maximum word length above which the terms are ignored. Defaults to unbounded (`0`).
  int32 max_word_length = 11;

  // The minimum document frequency below which the terms are ignored from the input document.
  int32 min_doc_freq = 12;

  MinimumShouldMatch minimum_should_match = 13;

  // The minimum term frequency below which the terms are ignored from the input document.
  int32 min_term_freq = 14;

  // The minimum word length below which the terms are ignored.
  int32 min_word_length = 15;

  // Overrides the default analyzer.
  map<string, string> per_field_analyzer = 16;

  string routing = 17;

  // Language value, such as `arabic` or `thai`. Defaults to `english`. Each language value corresponds to a predefined list of stop words in Lucene. See Stop words by language for supported language values and their stop words. Also accepts an array of stop words.
  StringOrStringArray stop_words = 18;

  MoreLikeThisQueryAllOfUnlike unlike = 19;

  int64 version = 20;

  VersionType version_type = 21;

}
message MoreLikeThisQueryAllOfLike {

    oneof more_like_this_query_all_of_like {
        Like like = 1;

        LikeArray like_array = 2;

    }

}
message MoreLikeThisQueryAllOfUnlike {

    oneof more_like_this_query_all_of_unlike {
        Like like = 1;

        LikeArray like_array = 2;

    }

}
message MovingAverageAggregation {

    oneof moving_average_aggregation {
        LinearMovingAverageAggregation linear_moving_average_aggregation = 1;

        SimpleMovingAverageAggregation simple_moving_average_aggregation = 2;

        EwmaMovingAverageAggregation ewma_moving_average_aggregation = 3;

        HoltMovingAverageAggregation holt_moving_average_aggregation = 4;

        HoltWintersMovingAverageAggregation holt_winters_moving_average_aggregation = 5;

    }

}
message MovingAverageAggregationBase {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  bool minimize = 6;

  int32 predict = 7;

  int32 window = 8;

}
message MovingFunctionAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  // The script that should be executed on each window of data.
  string script = 6;

  // By default, the window consists of the last n values excluding the current bucket. Increasing `shift` by 1, moves the starting window position by 1 to the right.
  int32 shift = 7;

  // The size of window to \"slide\" across the histogram.
  int32 window = 8;

}
message MovingPercentilesAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  // The size of window to \"slide\" across the histogram.
  int32 window = 6;

  // By default, the window consists of the last n values excluding the current bucket. Increasing `shift` by 1, moves the starting window position by 1 to the right.
  int32 shift = 7;

  bool keyed = 8;

}
message MultiBucketAggregateBaseAdjacencyMatrixBucket {


  google.protobuf.Struct meta = 1;

  BucketsAdjacencyMatrixBucket buckets = 2;

}
message MultiBucketAggregateBaseCompositeBucket {


  google.protobuf.Struct meta = 1;

  BucketsCompositeBucket buckets = 2;

}
message MultiBucketAggregateBaseDateHistogramBucket {


  google.protobuf.Struct meta = 1;

  BucketsDateHistogramBucket buckets = 2;

}
message MultiBucketAggregateBaseDoubleTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsDoubleTermsBucket buckets = 2;

}
message MultiBucketAggregateBaseFiltersBucket {


  google.protobuf.Struct meta = 1;

  BucketsFiltersBucket buckets = 2;

}
message MultiBucketAggregateBaseGeoHashGridBucket {


  google.protobuf.Struct meta = 1;

  BucketsGeoHashGridBucket buckets = 2;

}
message MultiBucketAggregateBaseGeoTileGridBucket {


  google.protobuf.Struct meta = 1;

  BucketsGeoTileGridBucket buckets = 2;

}
message MultiBucketAggregateBaseHistogramBucket {


  google.protobuf.Struct meta = 1;

  BucketsHistogramBucket buckets = 2;

}
message MultiBucketAggregateBaseIpRangeBucket {


  google.protobuf.Struct meta = 1;

  BucketsIpRangeBucket buckets = 2;

}
message MultiBucketAggregateBaseLongRareTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsLongRareTermsBucket buckets = 2;

}
message MultiBucketAggregateBaseLongTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsLongTermsBucket buckets = 2;

}
message MultiBucketAggregateBaseMultiTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsMultiTermsBucket buckets = 2;

}
message MultiBucketAggregateBaseRangeBucket {


  google.protobuf.Struct meta = 1;

  BucketsRangeBucket buckets = 2;

}
message MultiBucketAggregateBaseSignificantLongTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsSignificantLongTermsBucket buckets = 2;

}
message MultiBucketAggregateBaseSignificantStringTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsSignificantStringTermsBucket buckets = 2;

}
message MultiBucketAggregateBaseStringRareTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsStringRareTermsBucket buckets = 2;

}
message MultiBucketAggregateBaseStringTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsStringTermsBucket buckets = 2;

}
message MultiBucketAggregateBaseVariableWidthHistogramBucket {


  google.protobuf.Struct meta = 1;

  BucketsVariableWidthHistogramBucket buckets = 2;

}
message MultiBucketAggregateBaseVoid {


  google.protobuf.Struct meta = 1;

  BucketsVoid buckets = 2;

}
message MultiBucketBase {


  float doc_count = 1;

}
message MultiMatchQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Analyzer used to convert the text in the query value into tokens.
  string analyzer = 3;

  // If `true`, match phrase queries are automatically created for multi-term synonyms.
  bool auto_generate_synonyms_phrase_query = 4;

  float cutoff_frequency = 5;

  Fields fields = 6;

  Fuzziness fuzziness = 7;

  MultiTermQueryRewrite fuzzy_rewrite = 8;

  // If `true`, edits for fuzzy matching include transpositions of two adjacent characters (for example, `ab` to `ba`). Can be applied to the term subqueries constructed for all terms but the final term.
  bool fuzzy_transpositions = 9;

  // If `true`, format-based errors, such as providing a text query value for a numeric field, are ignored.
  bool lenient = 10;

  // Maximum number of terms to which the query will expand.
  int32 max_expansions = 11;

  MinimumShouldMatch minimum_should_match = 12;

  Operator operator = 13;

  // Number of beginning characters left unchanged for fuzzy matching.
  int32 prefix_length = 14;

  // Text, number, Boolean value or date you wish to find in the provided field.
  string query = 15;

  // Maximum number of positions allowed between matching tokens.
  int32 slop = 16;

  // Determines how scores for each per-term blended query and scores across groups are combined.
  float tie_breaker = 17;

  TextQueryType type = 18;

  ZeroTermsQuery zero_terms_query = 19;

}
message MultiTermLookup {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

}
message MultiTermQueryRewrite {

    oneof multi_term_query_rewrite {
        MultiTermQueryRewriteOneOf multi_term_query_rewrite_one_of = 1;

        string string = 2;

    }

}
enum MultiTermQueryRewriteOneOf {
  MULTI_TERM_QUERY_REWRITE_ONE_OF_UNSPECIFIED = 0;
  MULTI_TERM_QUERY_REWRITE_ONE_OF_CONSTANT_SCORE = 1;
  MULTI_TERM_QUERY_REWRITE_ONE_OF_CONSTANT_SCORE_BOOLEAN = 2;
  MULTI_TERM_QUERY_REWRITE_ONE_OF_SCORING_BOOLEAN = 3;
}
message MultiTermsAggregate {


  google.protobuf.Struct meta = 1;

  BucketsMultiTermsBucket buckets = 2;

  float doc_count_error_upper_bound = 3;

  float sum_other_doc_count = 4;

}
message MultiTermsAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  TermsAggregationCollectMode collect_mode = 3;

  HistogramOrder order = 4;

  // The minimum number of documents in a bucket for it to be returned.
  int32 min_doc_count = 5;

  // The minimum number of documents in a bucket on each shard for it to be returned.
  int32 shard_min_doc_count = 6;

  // The number of candidate terms produced by each shard. By default, `shard_size` will be automatically estimated based on the number of shards and the `size` parameter.
  int32 shard_size = 7;

  // Calculates the doc count error on per term basis.
  bool show_term_doc_count_error = 8;

  // The number of term buckets should be returned out of the overall terms list.
  int32 size = 9;

  // The field from which to generate sets of terms.
  repeated MultiTermLookup terms = 10;

}
message MultiTermsBucket {


  float doc_count = 1;

  repeated FieldValue key = 2;

  string key_as_string = 3;

  float doc_count_error_upper_bound = 4;

}
message MultiTermsBucketArray {


  repeated MultiTermsBucket multi_terms_bucket_array = 1;

}
message MultiTermsBucketMap {


  map<string, MultiTermsBucket> multi_terms_bucket_map = 1;

}
enum MultiValueMode {
  MULTI_VALUE_MODE_UNSPECIFIED = 0;
  MULTI_VALUE_MODE_AVG = 1;
  MULTI_VALUE_MODE_MAX = 2;
  MULTI_VALUE_MODE_MIN = 3;
  MULTI_VALUE_MODE_SUM = 4;
}
enum Multiplicative {
  MULTIPLICATIVE_UNSPECIFIED = 0;
  MULTIPLICATIVE_MULT = 1;
}
message MutualInformationHeuristic {


  // Set to `false` if you defined a custom background filter that represents a different set of documents that you want to compare to.
  bool background_is_superset = 1;

  // Set to `false` to filter out the terms that appear less often in the subset than in documents outside the subset.
  bool include_negatives = 2;

}
message Name {


}
enum NauticalMiles {
  NAUTICAL_MILES_UNSPECIFIED = 0;
  NAUTICAL_MILES_NMI = 1;
}
message NestedAggregate {


  google.protobuf.Struct meta = 1;

  float doc_count = 2;

}
message NestedAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string path = 3;

}
message NestedIdentity {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  int32 offset = 2;

  NestedIdentity nested = 3 [json_name="_nested"];

}
message NestedQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Set to `true` to ignore an unmapped field and not match any documents for this query. Set to `false` to throw an exception if the field is not mapped.
  bool ignore_unmapped = 3;

  InnerHits inner_hits = 4;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string path = 5;

  QueryContainer query = 6;

  ChildScoreMode score_mode = 7;

}
message NestedSortValue {


  QueryContainer filter = 1;

  int32 max_children = 2;

  NestedSortValue nested = 3;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string path = 4;

}
message NeuralQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  string query_text = 3;

  string query_image = 4;

  string model_id = 5;

  int32 k = 6;

  float min_score = 7;

  float max_distance = 8;

  QueryContainer filter = 9;

}
message NoriAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_NORI = 1;
  }

  Type type = 1;

  string version = 2;

  NoriDecompoundMode decompound_mode = 3;

  repeated string stoptags = 4;

  string user_dictionary = 5;

}
enum NoriDecompoundMode {
  NORI_DECOMPOUND_MODE_UNSPECIFIED = 0;
  NORI_DECOMPOUND_MODE_DISCARD = 1;
  NORI_DECOMPOUND_MODE_MIXED = 2;
  NORI_DECOMPOUND_MODE_NONE = 3;
}
message NormalizeAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  NormalizeMethod method = 6;

}
enum NormalizeMethod {
  NORMALIZE_METHOD_UNSPECIFIED = 0;
  NORMALIZE_METHOD_MEAN = 1;
  NORMALIZE_METHOD_PERCENT_OF_SUM = 2;
  NORMALIZE_METHOD_RESCALE_0_1 = 3;
  NORMALIZE_METHOD_RESCALE_0_100 = 4;
  NORMALIZE_METHOD_SOFTMAX = 5;
  NORMALIZE_METHOD_Z_SCORE = 6;
}
message NullArray {


  repeated google.protobuf.Struct null_array = 1;

}
message NullMap {


  map<string, google.protobuf.Struct> null_map = 1;

}
message NumberRangeQueryParameters {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  RangeRelation relation = 3;

  // Greater than.
  double gt = 4;

  // Greater than or equal to.
  double gte = 5;

  // Less than.
  double lt = 6;

  // Less than or equal to.
  double lte = 7;

  NumberRangeQueryParametersAllOfFrom from = 8;

  NumberRangeQueryParametersAllOfTo to = 9;

}
message NumberRangeQueryParametersAllOfFrom {

    oneof number_range_query_parameters_all_of_from {
        double double = 1;

        string string = 2;

    }

}
message NumberRangeQueryParametersAllOfTo {

    oneof number_range_query_parameters_all_of_to {
        double double = 1;

        string string = 2;

    }

}
message NumericDecayPlacement {


  double decay = 1;

  double offset = 2;

  double origin = 3;

  double scale = 4;

}
message OperationBase {


  string id = 1 [json_name="_id"];

  string index = 2 [json_name="_index"];

  string routing = 3;

  int64 if_primary_term = 4;

  int64 if_seq_no = 5;

  int64 version = 6;

  VersionType version_type = 7;

}
message OperationContainer {


  WriteOperation index = 1;

  WriteOperation create = 2;

  UpdateOperation update = 3;

  OperationBase delete = 4;

}
enum Operator {
  OPERATOR_UNSPECIFIED = 0;
  OPERATOR_AND = 1;
  OPERATOR_AND2 = 2;
  OPERATOR_OR = 3;
  OPERATOR_OR2 = 4;
}
message ParentAggregate {


  google.protobuf.Struct meta = 1;

  float doc_count = 2;

}
message ParentAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  string type = 3;

}
message ParentIdQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  string id = 3;

  // Set to `true` to ignore an unmapped field and not match any documents for this query. Set to `false` to throw an exception if the field is not mapped.
  bool ignore_unmapped = 4;

  string type = 5;

}
message PatternAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_PATTERN = 1;
  }

  Type type = 1;

  string version = 2;

  string flags = 3;

  bool lowercase = 4;

  string pattern = 5;

  // Language value, such as `arabic` or `thai`. Defaults to `english`. Each language value corresponds to a predefined list of stop words in Lucene. See Stop words by language for supported language values and their stop words. Also accepts an array of stop words.
  StringOrStringArray stopwords = 6;

}
message PercentileRanksAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  string format = 4;

  // By default, the aggregation associates a unique string key with each bucket and returns the ranges as a hash rather than an array. Set to `false` to disable this behavior.
  bool keyed = 5;

  // An array of values for which to calculate the percentile ranks.
  repeated double values = 6;

  HdrMethod hdr = 7;

  TDigest tdigest = 8;

}
message Percentiles {

    oneof percentiles {
        KeyedPercentilesValueMap keyed_percentiles_value_map = 1;

        ArrayPercentilesItemArray array_percentiles_item_array = 2;

    }

}
message PercentilesAggregateBase {


  google.protobuf.Struct meta = 1;

  Percentiles values = 2;

}
message PercentilesAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  string format = 4;

  // By default, the aggregation associates a unique string key with each bucket and returns the ranges as a hash rather than an array. Set to `false` to disable this behavior.
  bool keyed = 5;

  // The percentiles to calculate.
  repeated double percents = 6;

  HdrMethod hdr = 7;

  TDigest tdigest = 8;

}
message PercentilesBucketAggregate {


  google.protobuf.Struct meta = 1;

  Percentiles values = 2;

}
message PercentilesBucketAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  // The list of percentiles to calculate.
  repeated double percents = 6;

}
message PercolateQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  google.protobuf.Struct document = 3;

  // An array of sources of the documents being percolated.
  repeated google.protobuf.Struct documents = 4;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 5;

  string id = 6;

  string index = 7;

  // The suffix used for the `_percolator_document_slot` field when multiple `percolate` queries are specified.
  string name = 8;

  // Preference used to fetch document to percolate.
  string preference = 9;

  string routing = 10;

  int64 version = 11;

}
message PhaseTook {


  int32 dfs_pre_query = 1;

  int32 query = 2;

  int32 fetch = 3;

  int32 dfs_query = 4;

  int32 expand = 5;

  int32 can_match = 6;

}
message PhoneAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_PHONE = 1;
    TYPE_PHONE_SEARCH = 2;
  }

  Type type = 1;

  // Optional ISO 3166 country code, defaults to \"ZZ\" (unknown region).
  string phone_region = 2 [json_name="phone-region"];

}
message PhraseSuggest {


  int32 length = 1;

  int32 offset = 2;

  string text = 3;

  PhraseSuggestAllOfOptions options = 4;

}
message PhraseSuggestAllOfOptions {

    oneof phrase_suggest_all_of_options {
        PhraseSuggestOption phrase_suggest_option = 1;

        PhraseSuggestOptionArray phrase_suggest_option_array = 2;

    }

}
message PhraseSuggestCollate {


  google.protobuf.Struct params = 1;

  bool prune = 2;

  PhraseSuggestCollateQuery query = 3;

}
message PhraseSuggestCollateQuery {


  string id = 1;

  string source = 2;

}
message PhraseSuggestHighlight {


  string post_tag = 1;

  string pre_tag = 2;

}
message PhraseSuggestOption {


  string text = 1;

  double score = 2;

  string highlighted = 3;

  bool collate_match = 4;

}
message PhraseSuggestOptionArray {


  repeated PhraseSuggestOption phrase_suggest_option_array = 1;

}
message PhraseSuggester {


  string analyzer = 1;

  string field = 2;

  int32 size = 3;

  PhraseSuggestCollate collate = 4;

  double confidence = 5;

  repeated DirectGenerator direct_generator = 6;

  bool force_unigrams = 7;

  int32 gram_size = 8;

  PhraseSuggestHighlight highlight = 9;

  double max_errors = 10;

  double real_word_error_likelihood = 11;

  string separator = 12;

  int32 shard_size = 13;

  SmoothingModel smoothing = 14;

  string text = 15;

  int32 token_limit = 16;

}
message PinnedDoc {


  string id = 1 [json_name="_id"];

  string index = 2 [json_name="_index"];

}
message PinnedQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  QueryContainer organic = 3;

  // Document IDs listed in the order they are to appear in results. Required if `docs` is not specified.
  repeated string ids = 4;

  // Documents listed in the order they are to appear in results. Required if `ids` is not specified.
  repeated PinnedDoc docs = 5;

}
message PipelineAggregationBase {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

}
message PointInTimeReference {


  string id = 1;

  // A duration. Units can be `nanos`, `micros`, `ms` (milliseconds), `s` (seconds), `m` (minutes), `h` (hours) and `d` (days). Also accepts \"0\" without a unit and \"-1\" to indicate an unspecified value.
  string keep_alive = 2;

}
message PrefixQuery {

    oneof prefix_query {
        string value = 1;

        PrefixQueryOneOf prefix_query_one_of = 2;

    }

}
message PrefixQueryOneOf {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  MultiTermQueryRewrite rewrite = 3;

  // Beginning characters of terms you wish to find in the provided field.
  string value = 4;

  // Allows ASCII case insensitive matching of the value with the indexed field values when set to `true`. Default is `false` which means the case sensitivity of matching depends on the underlying field's mapping.
  bool case_insensitive = 5;

}
message Profile {


  repeated ShardProfile shards = 1;

}
enum Quarter {
  QUARTER_UNSPECIFIED = 0;
  QUARTER_QUARTER = 1;
  QUARTER_1Q = 2;
}
message QueryBase {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

}
message QueryBreakdown {


  int64 advance = 1;

  int64 advance_count = 2;

  int64 build_scorer = 3;

  int64 build_scorer_count = 4;

  int64 create_weight = 5;

  int64 create_weight_count = 6;

  int64 match = 7;

  int64 match_count = 8;

  int64 shallow_advance = 9;

  int64 shallow_advance_count = 10;

  int64 next_doc = 11;

  int64 next_doc_count = 12;

  int64 score = 13;

  int64 score_count = 14;

  int64 compute_max_score = 15;

  int64 compute_max_score_count = 16;

  int64 set_min_competitive_score = 17;

  int64 set_min_competitive_score_count = 18;

}
message QueryContainer {


  BoolQuery bool = 1;

  BoostingQuery boosting = 2;

  map<string, CommonTermsQuery> common = 3;

  CombinedFieldsQuery combined_fields = 4;

  ConstantScoreQuery constant_score = 5;

  DisMaxQuery dis_max = 6;

  DistanceFeatureQuery distance_feature = 7;

  ExistsQuery exists = 8;

  FunctionScoreQuery function_score = 9;

  // Returns documents that contain terms similar to the search term, as measured by a Levenshtein edit distance.
  map<string, FuzzyQuery> fuzzy = 10;

  GeoBoundingBoxQuery geo_bounding_box = 11;

  GeoDistanceQuery geo_distance = 12;

  GeoPolygonQuery geo_polygon = 13;

  GeoShapeQuery geo_shape = 14;

  HasChildQuery has_child = 15;

  HasParentQuery has_parent = 16;

  HybridQuery hybrid = 17;

  IdsQuery ids = 18;

  // Returns documents based on the order and proximity of matching terms.
  map<string, IntervalsQuery> intervals = 19;

  map<string, KnnQuery> knn = 20;

  // Returns documents that match a provided text, number, date or Boolean value. The provided text is analyzed before matching.
  map<string, MatchQuery> match = 21;

  MatchAllQuery match_all = 22;

  // Analyzes its input and constructs a `bool` query from the terms. Each term except the last is used in a `term` query. The last term is used in a prefix query.
  map<string, MatchBoolPrefixQuery> match_bool_prefix = 23;

  MatchNoneQuery match_none = 24;

  // Analyzes the text and creates a phrase query out of the analyzed text.
  map<string, MatchPhraseQuery> match_phrase = 25;

  // Returns documents that contain the words of a provided text, in the same order as provided. The last term of the provided text is treated as a prefix, matching any words that begin with that term.
  map<string, MatchPhrasePrefixQuery> match_phrase_prefix = 26;

  MoreLikeThisQuery more_like_this = 27;

  MultiMatchQuery multi_match = 28;

  NestedQuery nested = 29;

  map<string, NeuralQuery> neural = 30;

  ParentIdQuery parent_id = 31;

  PercolateQuery percolate = 32;

  PinnedQuery pinned = 33;

  // Returns documents that contain a specific prefix in a provided field.
  map<string, PrefixQuery> prefix = 34;

  QueryStringQuery query_string = 35;

  // Returns documents that contain terms within a provided range.
  map<string, RangeQuery> range = 36;

  RankFeatureQuery rank_feature = 37;

  // Returns documents that contain terms matching a regular expression.
  map<string, RegexpQuery> regexp = 38;

  ScriptQuery script = 39;

  ScriptScoreQuery script_score = 40;

  SimpleQueryStringQuery simple_query_string = 41;

  SpanContainingQuery span_containing = 42;

  SpanFieldMaskingQuery field_masking_span = 43;

  SpanFirstQuery span_first = 44;

  SpanMultiTermQuery span_multi = 45;

  SpanNearQuery span_near = 46;

  SpanNotQuery span_not = 47;

  SpanOrQuery span_or = 48;

  // Matches spans containing a term.
  map<string, SpanTermQuery> span_term = 49;

  SpanWithinQuery span_within = 50;

  // Returns documents that contain an exact term in a provided field. To return a document, the query term must exactly match the queried field's value, including white space and capitalization.
  map<string, TermQuery> term = 51;

  // Returns documents that contain one or more exact terms in a provided field.
  TermsQuery terms = 52;

  // Returns documents that contain a minimum number of exact terms in a provided field. To return a document, a required number of terms must exactly match the field values, including white space and capitalization.
  map<string, TermsSetQuery> terms_set = 53;

  TypeQuery type = 54;

  // Returns documents that contain terms matching a wildcard pattern.
  map<string, WildcardQuery> wildcard = 55;

  WrapperQuery wrapper = 56;

  XyShapeQuery xy_shape = 57;

}
message QueryContainerArray {


  repeated QueryContainer query_container_array = 1;

}
message QueryContainerMap {


  map<string, QueryContainer> query_container_map = 1;

}
message QueryProfile {


  QueryBreakdown breakdown = 1;

  string description = 2;

  // Time unit for nanoseconds.
  int64 time_in_nanos = 3;

  string type = 4;

  repeated QueryProfile children = 5;

}
message QueryStringQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // If `true`, the wildcard characters `*` and `?` are allowed as the first character of the query string.
  bool allow_leading_wildcard = 3;

  // Analyzer used to convert text in the query string into tokens.
  string analyzer = 4;

  // If `true`, the query attempts to analyze wildcard terms in the query string.
  bool analyze_wildcard = 5;

  // If `true`, match phrase queries are automatically created for multi-term synonyms.
  bool auto_generate_synonyms_phrase_query = 6;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string default_field = 7;

  Operator default_operator = 8;

  // If `true`, enable position increments in queries constructed from a `query_string` search.
  bool enable_position_increments = 9;

  bool escape = 10;

  // Array of fields to search. Supports wildcards (`*`).
  repeated string fields = 11;

  Fuzziness fuzziness = 12;

  // Maximum number of terms to which the query expands for fuzzy matching.
  int32 fuzzy_max_expansions = 13;

  // Number of beginning characters left unchanged for fuzzy matching.
  int32 fuzzy_prefix_length = 14;

  MultiTermQueryRewrite fuzzy_rewrite = 15;

  // If `true`, edits for fuzzy matching include transpositions of two adjacent characters (for example, `ab` to `ba`).
  bool fuzzy_transpositions = 16;

  // If `true`, format-based errors, such as providing a text value for a numeric field, are ignored.
  bool lenient = 17;

  // Maximum number of automaton states required for the query.
  int32 max_determinized_states = 18;

  MinimumShouldMatch minimum_should_match = 19;

  // Maximum number of positions allowed between matching tokens for phrases.
  int32 phrase_slop = 20;

  // Query string you wish to parse and use for search.
  string query = 21;

  // Analyzer used to convert quoted text in the query string into tokens. For quoted text, this parameter overrides the analyzer specified in the `analyzer` parameter.
  string quote_analyzer = 22;

  // Suffix appended to quoted text in the query string. You can use this suffix to use a different analysis method for exact matches.
  string quote_field_suffix = 23;

  MultiTermQueryRewrite rewrite = 24;

  // How to combine the queries generated from the individual search terms in the resulting `dis_max` query.
  float tie_breaker = 25;

  string time_zone = 26;

  TextQueryType type = 27;

}
message RandomScoreFunction {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  RandomScoreFunctionSeed seed = 2;

}
message RandomScoreFunctionSeed {

    oneof random_score_function_seed {
        int32 int32 = 1;

        string string = 2;

    }

}
message RangeAggregate {


  google.protobuf.Struct meta = 1;

  BucketsRangeBucket buckets = 2;

}
message RangeAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 3;

  // The value to apply to documents that do not have a value. By default, documents without a value are ignored.
  int32 missing = 4;

  // An array of ranges used to bucket documents.
  repeated AggregationRange ranges = 5;

  Script script = 6;

  // Set to `true` to associate a unique string key with each bucket and return the ranges as a hash rather than an array.
  bool keyed = 7;

  string format = 8;

}
message RangeBucket {


  float doc_count = 1;

  float from = 2;

  float to = 3;

  string from_as_string = 4;

  string to_as_string = 5;

  // The bucket key. Present if the aggregation is not keyed.
  string key = 6;

}
message RangeBucketArray {


  repeated RangeBucket range_bucket_array = 1;

}
message RangeBucketMap {


  map<string, RangeBucket> range_bucket_map = 1;

}
message RangeQuery {

    oneof range_query {
        NumberRangeQueryParameters number_range_query_parameters = 1;

        DateRangeQueryParameters date_range_query_parameters = 2;

    }

}
message RangeQueryBase {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  RangeRelation relation = 3;

}
enum RangeRelation {
  RANGE_RELATION_UNSPECIFIED = 0;
  RANGE_RELATION_CONTAINS = 1;
  RANGE_RELATION_INTERSECTS = 2;
  RANGE_RELATION_WITHIN = 3;
}
message RankContainer {


  RrfRank rrf = 1;

}
message RankFeatureFunctionLinear {


}
message RankFeatureFunctionLogarithm {


  // Configurable scaling factor.
  float scaling_factor = 1;

}
message RankFeatureFunctionSaturation {


  // Configurable pivot value so that the result will be less than 0.5.
  float pivot = 1;

}
message RankFeatureFunctionSigmoid {


  // Configurable pivot value so that the result will be less than 0.5.
  float pivot = 1;

  // Configurable Exponent.
  float exponent = 2;

}
message RankFeatureQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 3;

  RankFeatureFunctionSaturation saturation = 4;

  RankFeatureFunctionLogarithm log = 5;

  RankFeatureFunctionLinear linear = 6;

  RankFeatureFunctionSigmoid sigmoid = 7;

}
message RareTermsAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  TermsExclude exclude = 3;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 4;

  TermsInclude include = 5;

  // The maximum number of documents a term should appear in.
  int64 max_doc_count = 6;

  FieldValue missing = 7;

  // The precision of the internal CuckooFilters. Smaller precision leads to better approximation, but higher memory usage.
  double precision = 8;

  string value_type = 9;

}
message RateAggregate {


  google.protobuf.Struct meta = 1;

  float value = 2;

  string value_as_string = 3;

}
message RateAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  string format = 4;

  CalendarInterval unit = 5;

  RateMode mode = 6;

}
enum RateMode {
  RATE_MODE_UNSPECIFIED = 0;
  RATE_MODE_SUM = 1;
  RATE_MODE_VALUE_COUNT = 2;
}
message Refresh {

    oneof refresh {
        bool bool = 1;

        RefreshOneOf refresh_one_of = 2;

    }

}
enum RefreshOneOf {
  REFRESH_ONE_OF_UNSPECIFIED = 0;
  REFRESH_ONE_OF_FALSE = 1;
  REFRESH_ONE_OF_TRUE = 2;
  REFRESH_ONE_OF_WAIT_FOR = 3;
}
message RegexpQuery {

    oneof regexp_query {
        string value = 1;

        RegexpQueryOneOf regexp_query_one_of = 2;

    }

}
message RegexpQueryOneOf {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Allows case insensitive matching of the regular expression value with the indexed field values when set to `true`. When `false`, case sensitivity of matching depends on the underlying field's mapping.
  bool case_insensitive = 3;

  // Enables optional operators for the regular expression.
  string flags = 4;

  // Maximum number of automaton states required for the query.
  int32 max_determinized_states = 5;

  MultiTermQueryRewrite rewrite = 6;

  // Regular expression for terms you wish to find in the provided field.
  string value = 7;

}
message RegressionInferenceOptions {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string results_field = 1;

  // Specifies the maximum number of feature importance values per document.
  int32 num_top_feature_importance_values = 2;

}
message RelationName {


}
message Rescore {


  RescoreQuery query = 1;

  int32 window_size = 2;

}
message RescoreArray {


  repeated Rescore rescore_array = 1;

}
message RescoreContext {


  float oversample_factor = 1;

}
message RescoreQuery {


  QueryContainer rescore_query = 1;

  // The relative importance of the original query as compared to the rescore query.
  float query_weight = 2;

  // The relative importance of the rescore query as compared to the original query.
  float rescore_query_weight = 3;

  ScoreMode score_mode = 4;

}
message ResponseBody {


  int64 took = 1;

  bool timed_out = 2;

  ShardStatistics shards = 3 [json_name="_shards"];

  PhaseTook phase_took = 4;

  HitsMetadata hits = 5;

  map<string, Aggregate> aggregations = 6;

  ClusterStatistics clusters = 7 [json_name="_clusters"];

  map<string, google.protobuf.Struct> fields = 8;

  float max_score = 9;

  int32 num_reduce_phases = 10;

  Profile profile = 11;

  string pit_id = 12;

  string scroll_id = 13 [json_name="_scroll_id"];

  map<string, SuggestArray> suggest = 14;

  bool terminated_early = 15;

}
message ResponseItem {


  // The document type.
  string type = 1 [json_name="_type"];

  // The document ID associated with the operation.
  optional string id = 2 [json_name="_id"];

  // The name of the index associated with the operation. If the operation targets a data stream, this is the backing index into which the document was written.
  string index = 3 [json_name="_index"];

  // HTTP status code returned for the operation.
  int32 status = 4;

  ErrorCause error = 5;

  // The primary term assigned to the document for the operation.
  int64 primary_term = 6 [json_name="_primary_term"];

  // Result of the operation. Successful values are `created`, `deleted`, and `updated`.
  string result = 7;

  int64 seq_no = 8 [json_name="_seq_no"];

  ShardStatistics shards = 9 [json_name="_shards"];

  int64 version = 10 [json_name="_version"];

  bool forced_refresh = 11;

  InlineGetDictUserDefined get = 12;

}
message ResponseItemMap {


  map<string, ResponseItem> response_item_map = 1;

}
enum Result {
  RESULT_UNSPECIFIED = 0;
  RESULT_CREATED = 1;
  RESULT_DELETED = 2;
  RESULT_NOOP = 3;
  RESULT_NOT_FOUND = 4;
  RESULT_UPDATED = 5;
}
message ReverseNestedAggregate {


  google.protobuf.Struct meta = 1;

  float doc_count = 2;

}
message ReverseNestedAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string path = 3;

}
message RootCause {


  string type = 1;

  string reason = 2;

}
message Routing {


}
message RoutingInQueryString {


}
message RrfRank {


  // To what degree documents found in individual result sets per query influence the final ranked result set.
  float rank_constant = 1;

  // The size of the individual result sets per query.
  float window_size = 2;

}
message SamplerAggregate {


  google.protobuf.Struct meta = 1;

  float doc_count = 2;

}
message SamplerAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  // Limits how many top-scoring documents are collected in the sample processed on each shard.
  int32 shard_size = 3;

}
enum SamplerAggregationExecutionHint {
  SAMPLER_AGGREGATION_EXECUTION_HINT_UNSPECIFIED = 0;
  SAMPLER_AGGREGATION_EXECUTION_HINT_BYTES_HASH = 1;
  SAMPLER_AGGREGATION_EXECUTION_HINT_GLOBAL_ORDINALS = 2;
  SAMPLER_AGGREGATION_EXECUTION_HINT_MAP = 3;
}
enum ScoreMode {
  SCORE_MODE_UNSPECIFIED = 0;
  SCORE_MODE_AVG = 1;
  SCORE_MODE_MAX = 2;
  SCORE_MODE_MIN = 3;
  SCORE_MODE_MULTIPLY = 4;
  SCORE_MODE_TOTAL = 5;
}
message ScoreSort {


  SortOrder order = 1;

}
message Script {

    oneof script {
        InlineScript inline = 1;

        StoredScriptId stored = 2;

    }

}
message ScriptBase {


  // Specifies any named parameters that are passed into the script as variables.  Use parameters instead of hard-coded values to decrease compilation time. 
  google.protobuf.Struct params = 1;

}
message ScriptField {


  Script script = 1;

  bool ignore_failure = 2;

}
message ScriptLanguage {


  BuiltinScriptLanguage builtin = 1;

  string custom = 2;

}
message ScriptQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  Script script = 3;

}
message ScriptScoreFunction {


  Script script = 1;

}
message ScriptScoreQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Documents with a score lower than this floating point number are excluded from the search results.
  float min_score = 3;

  QueryContainer query = 4;

  Script script = 5;

}
message ScriptSort {


  SortOrder order = 1;

  Script script = 2;

  ScriptSortType type = 3;

  SortMode mode = 4;

  NestedSortValue nested = 5;

}
enum ScriptSortType {
  SCRIPT_SORT_TYPE_UNSPECIFIED = 0;
  SCRIPT_SORT_TYPE_NUMBER = 1;
  SCRIPT_SORT_TYPE_STRING = 2;
  SCRIPT_SORT_TYPE_VERSION = 3;
}
message ScriptedHeuristic {


  Script script = 1;

}
message ScriptedMetricAggregate {


  google.protobuf.Struct meta = 1;

  google.protobuf.Struct value = 2;

}
message ScriptedMetricAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  Script combine_script = 4;

  Script init_script = 5;

  Script map_script = 6;

  // A global object with script parameters for `init`, `map` and `combine` scripts. It is shared between the scripts.
  google.protobuf.Struct params = 7;

  Script reduce_script = 8;

}
message ScrollId {


}
message SearchProfile {


  repeated Collector collector = 1;

  repeated QueryProfile query = 2;

  int64 rewrite_time = 3;

}
message SearchRequest {


  // Defines the aggregations that are run as part of the search request.
  map<string, AggregationContainer> aggregations = 1;

  // Defines the aggregations that are run as part of the search request.
  map<string, AggregationContainer> aggs = 2;

  FieldCollapse collapse = 3;

  // If `true`, returns detailed information about score computation as part of a hit.
  bool explain = 4;

  // Configuration of search extensions defined by OpenSearch plugins.
  map<string, google.protobuf.Struct> ext = 5;

  // Starting document offset. Needs to be non-negative. By default, you cannot page through more than 10,000 hits using the `from` and `size` parameters. To page through more hits, use the `search_after` parameter.
  int32 from = 6;

  Highlight highlight = 7;

  TrackHits track_total_hits = 8;

  // Boosts the `_score` of documents from specified indexes.
  repeated FloatMap indices_boost = 9;

  // Array of wildcard (`*`) patterns. The request returns doc values for field names matching these patterns in the `hits.fields` property of the response.
  repeated FieldAndFormat docvalue_fields = 10;

  RankContainer rank = 11;

  // Minimum `_score` for matching documents. Documents with a lower `_score` are not included in the search results.
  float min_score = 12;

  QueryContainer post_filter = 13;

  // Set to `true` to return detailed timing information about the execution of individual components in a search request. NOTE: This is a debugging tool and adds significant overhead to search execution.
  bool profile = 14;

  QueryContainer query = 15;

  SearchRequestRescore rescore = 16;

  // Retrieve a script evaluation (based on different fields) for each hit.
  map<string, ScriptField> script_fields = 17;

  repeated FieldValue search_after = 18;

  // The number of hits to return. By default, you cannot page through more than 10,000 hits using the `from` and `size` parameters. To page through more hits, use the `search_after` parameter.
  int32 size = 19;

  SlicedScroll slice = 20;

  Sort sort = 21;

  SourceConfig source = 22 [json_name="_source"];

  // Array of wildcard (`*`) patterns. The request returns values for field names matching these patterns in the `hits.fields` property of the response.
  repeated FieldAndFormat fields = 23;

  Suggester suggest = 24;

  // Maximum number of documents to collect for each shard. If a query reaches this limit, OpenSearch terminates the query early. OpenSearch collects documents before sorting. Use with caution. OpenSearch applies this parameter to each shard handling the request. When possible, let OpenSearch perform early termination automatically. Avoid specifying this parameter for requests that target data streams with backing indexes across multiple data tiers. If set to `0` (default), the query does not terminate early.
  int32 terminate_after = 25;

  // Specifies the period of time to wait for a response from each shard. If no response is received before the timeout expires, the request fails and returns an error. Defaults to no timeout.
  string timeout = 26;

  // If `true`, calculate and return document scores, even if the scores are not used for sorting.
  bool track_scores = 27;

  // If `true`, returns document version as part of a hit.
  bool version = 28;

  // If `true`, returns sequence number and primary term of the last modification of each hit.
  bool seq_no_primary_term = 29;

  Fields stored_fields = 30;

  PointInTimeReference pit = 31;

  // Stats groups to associate with the search. Each group maintains a statistics aggregation for its associated searches. You can retrieve these stats using the indexes stats API.
  repeated string stats = 32;

}
message SearchRequestRescore {

    oneof search_request_rescore {
        Rescore rescore = 1;

        RescoreArray rescore_array = 2;

    }

}
message SearchType {

    oneof search_type {
        SearchTypeOneOf search_type_one_of = 1;

        SearchTypeOneOf1 search_type_one_of1 = 2;

    }

}
enum SearchTypeOneOf {
  SEARCH_TYPE_ONE_OF_UNSPECIFIED = 0;
  SEARCH_TYPE_ONE_OF_DFS_QUERY_THEN_FETCH = 1;
}
enum SearchTypeOneOf1 {
  SEARCH_TYPE_ONE_OF1_UNSPECIFIED = 0;
  SEARCH_TYPE_ONE_OF1_QUERY_THEN_FETCH = 1;
}
enum Second {
  SECOND_UNSPECIFIED = 0;
  SECOND_SECOND = 1;
  SECOND_1S = 2;
}
message SequenceNumber {


}
message SerialDifferencingAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  // The historical bucket to subtract from the current value. Must be a positive, non-zero integer.
  int32 lag = 6;

}
message ShardFailure {


  string index = 1;

  string node = 2;

  ErrorCause reason = 3;

  int32 shard = 4;

  string status = 5;

}
message ShardProfile {


  repeated AggregationProfile aggregations = 1;

  string id = 2;

  repeated SearchProfile searches = 3;

  FetchProfile fetch = 4;

}
message ShardStatistics {


  int32 failed = 1;

  int32 successful = 2;

  int32 total = 3;

  repeated ShardFailure failures = 4;

  int32 skipped = 5;

}
message SignificantLongTermsAggregate {


  google.protobuf.Struct meta = 1;

  BucketsSignificantLongTermsBucket buckets = 2;

  float bg_count = 3;

  float doc_count = 4;

}
message SignificantLongTermsBucket {


  float doc_count = 1;

  float score = 2;

  float bg_count = 3;

  string key_as_string = 4;

  float key = 5;

}
message SignificantLongTermsBucketArray {


  repeated SignificantLongTermsBucket significant_long_terms_bucket_array = 1;

}
message SignificantLongTermsBucketMap {


  map<string, SignificantLongTermsBucket> significant_long_terms_bucket_map = 1;

}
message SignificantStringTermsAggregate {


  google.protobuf.Struct meta = 1;

  BucketsSignificantStringTermsBucket buckets = 2;

  float bg_count = 3;

  float doc_count = 4;

}
message SignificantStringTermsBucket {


  float doc_count = 1;

  float score = 2;

  float bg_count = 3;

  string key = 4;

}
message SignificantStringTermsBucketArray {


  repeated SignificantStringTermsBucket significant_string_terms_bucket_array = 1;

}
message SignificantStringTermsBucketMap {


  map<string, SignificantStringTermsBucket> significant_string_terms_bucket_map = 1;

}
message SignificantTermsAggregateBaseSignificantLongTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsSignificantLongTermsBucket buckets = 2;

  float bg_count = 3;

  float doc_count = 4;

}
message SignificantTermsAggregateBaseSignificantStringTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsSignificantStringTermsBucket buckets = 2;

  float bg_count = 3;

  float doc_count = 4;

}
message SignificantTermsAggregateBaseVoid {


  google.protobuf.Struct meta = 1;

  BucketsVoid buckets = 2;

  float bg_count = 3;

  float doc_count = 4;

}
message SignificantTermsAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  QueryContainer background_filter = 3;

  ChiSquareHeuristic chi_square = 4;

  TermsExclude exclude = 5;

  TermsAggregationExecutionHint execution_hint = 6;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 7;

  GoogleNormalizedDistanceHeuristic gnd = 8;

  TermsInclude include = 9;

  google.protobuf.Struct jlh = 10;

  // Only return terms that are found in more than `min_doc_count` hits.
  int64 min_doc_count = 11;

  MutualInformationHeuristic mutual_information = 12;

  google.protobuf.Struct percentage = 13;

  ScriptedHeuristic script_heuristic = 14;

  // Regulates the certainty a shard has if the term should actually be added to the candidate list or not with respect to the `min_doc_count`. Terms will only be considered if their local shard frequency within the set is higher than the `shard_min_doc_count`.
  int64 shard_min_doc_count = 15;

  // Can be used to control the volumes of candidate terms produced by each shard. By default, `shard_size` will be automatically estimated based on the number of shards and the `size` parameter.
  int32 shard_size = 16;

  // The number of buckets returned out of the overall terms list.
  int32 size = 17;

}
message SignificantTermsBucketBase {


  float doc_count = 1;

  float score = 2;

  float bg_count = 3;

}
message SignificantTextAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  QueryContainer background_filter = 3;

  ChiSquareHeuristic chi_square = 4;

  TermsExclude exclude = 5;

  TermsAggregationExecutionHint execution_hint = 6;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 7;

  // Whether to out duplicate text to deal with noisy data.
  bool filter_duplicate_text = 8;

  GoogleNormalizedDistanceHeuristic gnd = 9;

  TermsInclude include = 10;

  google.protobuf.Struct jlh = 11;

  // Only return values that are found in more than `min_doc_count` hits.
  int64 min_doc_count = 12;

  MutualInformationHeuristic mutual_information = 13;

  google.protobuf.Struct percentage = 14;

  ScriptedHeuristic script_heuristic = 15;

  // Regulates the certainty a shard has if the values should actually be added to the candidate list or not with respect to the `min_doc_count`. Values will only be considered if their local shard frequency within the set is higher than the `shard_min_doc_count`.
  int64 shard_min_doc_count = 16;

  // The number of candidate terms produced by each shard. By default, `shard_size` will be automatically estimated based on the number of shards and the `size` parameter.
  int32 shard_size = 17;

  // The number of buckets returned out of the overall terms list.
  int32 size = 18;

  Fields source_fields = 19;

}
message SimpleAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_SIMPLE = 1;
  }

  Type type = 1;

  string version = 2;

}
message SimpleMovingAverageAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

  bool minimize = 6;

  int32 predict = 7;

  int32 window = 8;

  enum Model {
    MODEL_UNSPECIFIED = 0;
    MODEL_SIMPLE = 1;
  }

  Model model = 9;

  google.protobuf.Struct settings = 10;

}
enum SimpleQueryStringFlag {
  SIMPLE_QUERY_STRING_FLAG_UNSPECIFIED = 0;
  SIMPLE_QUERY_STRING_FLAG_ALL = 1;
  SIMPLE_QUERY_STRING_FLAG_AND = 2;
  SIMPLE_QUERY_STRING_FLAG_ESCAPE = 3;
  SIMPLE_QUERY_STRING_FLAG_FUZZY = 4;
  SIMPLE_QUERY_STRING_FLAG_NEAR = 5;
  SIMPLE_QUERY_STRING_FLAG_NONE = 6;
  SIMPLE_QUERY_STRING_FLAG_NOT = 7;
  SIMPLE_QUERY_STRING_FLAG_OR = 8;
  SIMPLE_QUERY_STRING_FLAG_PHRASE = 9;
  SIMPLE_QUERY_STRING_FLAG_PRECEDENCE = 10;
  SIMPLE_QUERY_STRING_FLAG_PREFIX = 11;
  SIMPLE_QUERY_STRING_FLAG_SLOP = 12;
  SIMPLE_QUERY_STRING_FLAG_WHITESPACE = 13;
}
message SimpleQueryStringFlags {

    oneof simple_query_string_flags {
        SimpleQueryStringFlag single = 1;

        string multiple = 2;

    }

}
message SimpleQueryStringFlagsOneOf {


}
message SimpleQueryStringQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Analyzer used to convert text in the query string into tokens.
  string analyzer = 3;

  // If `true`, the query attempts to analyze wildcard terms in the query string.
  bool analyze_wildcard = 4;

  // If `true`, the parser creates a `match_phrase` query for each multi-position token.
  bool auto_generate_synonyms_phrase_query = 5;

  Operator default_operator = 6;

  // Array of fields you wish to search. Accepts wildcard expressions. You also can boost relevance scores for matches to particular fields using a caret (`^`) notation. Defaults to the `index.query.default_field index` setting, which has a default value of `*`.
  repeated string fields = 7;

  SimpleQueryStringFlags flags = 8;

  // Maximum number of terms to which the query expands for fuzzy matching.
  int32 fuzzy_max_expansions = 9;

  // Number of beginning characters left unchanged for fuzzy matching.
  int32 fuzzy_prefix_length = 10;

  // If `true`, edits for fuzzy matching include transpositions of two adjacent characters (for example, `ab` to `ba`).
  bool fuzzy_transpositions = 11;

  // If `true`, format-based errors, such as providing a text value for a numeric field, are ignored.
  bool lenient = 12;

  MinimumShouldMatch minimum_should_match = 13;

  // Query string in the simple query string syntax you wish to parse and use for search.
  string query = 14;

  // Suffix appended to quoted text in the query string.
  string quote_field_suffix = 15;

}
message SimpleValueAggregate {


  google.protobuf.Struct meta = 1;

  SingleMetricAggregateBaseAllOfValue value = 2;

  string value_as_string = 3;

}
message SingleBucketAggregateBase {


  google.protobuf.Struct meta = 1;

  float doc_count = 2;

}
message SingleMetricAggregateBase {


  google.protobuf.Struct meta = 1;

  SingleMetricAggregateBaseAllOfValue value = 2;

  string value_as_string = 3;

}
message SingleMetricAggregateBaseAllOfValue {


  float float = 1;

  string string = 2;

}
message SlicedScroll {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  int32 id = 2;

  int32 max = 3;

}
message SmartcnAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_SMARTCN = 1;
  }

  Type type = 1;

}
message SmoothingModel {


  LaplaceSmoothingModel laplace = 1;

  LinearInterpolationSmoothingModel linear_interpolation = 2;

  StupidBackoffSmoothingModel stupid_backoff = 3;

}
message SnowballAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_SNOWBALL = 1;
  }

  Type type = 1;

  string version = 2;

  SnowballLanguage language = 3;

  // Language value, such as `arabic` or `thai`. Defaults to `english`. Each language value corresponds to a predefined list of stop words in Lucene. See Stop words by language for supported language values and their stop words. Also accepts an array of stop words.
  StringOrStringArray stopwords = 4;

}
enum SnowballLanguage {
  SNOWBALL_LANGUAGE_UNSPECIFIED = 0;
  SNOWBALL_LANGUAGE_ARMENIAN = 1;
  SNOWBALL_LANGUAGE_BASQUE = 2;
  SNOWBALL_LANGUAGE_CATALAN = 3;
  SNOWBALL_LANGUAGE_DANISH = 4;
  SNOWBALL_LANGUAGE_DUTCH = 5;
  SNOWBALL_LANGUAGE_ENGLISH = 6;
  SNOWBALL_LANGUAGE_FINNISH = 7;
  SNOWBALL_LANGUAGE_FRENCH = 8;
  SNOWBALL_LANGUAGE_GERMAN = 9;
  SNOWBALL_LANGUAGE_GERMAN2 = 10;
  SNOWBALL_LANGUAGE_HUNGARIAN = 11;
  SNOWBALL_LANGUAGE_ITALIAN = 12;
  SNOWBALL_LANGUAGE_KP = 13;
  SNOWBALL_LANGUAGE_LOVINS = 14;
  SNOWBALL_LANGUAGE_NORWEGIAN = 15;
  SNOWBALL_LANGUAGE_PORTER = 16;
  SNOWBALL_LANGUAGE_PORTUGUESE = 17;
  SNOWBALL_LANGUAGE_ROMANIAN = 18;
  SNOWBALL_LANGUAGE_RUSSIAN = 19;
  SNOWBALL_LANGUAGE_SPANISH = 20;
  SNOWBALL_LANGUAGE_SWEDISH = 21;
  SNOWBALL_LANGUAGE_TURKISH = 22;
}
message Sort {

    oneof sort {
        SortOptions sort_options = 1;

        SortOptionsArray sort_options_array = 2;

    }

}
enum SortMode {
  SORT_MODE_UNSPECIFIED = 0;
  SORT_MODE_AVG = 1;
  SORT_MODE_MAX = 2;
  SORT_MODE_MEDIAN = 3;
  SORT_MODE_MIN = 4;
  SORT_MODE_SUM = 5;
}
message SortOptions {

    oneof sort_options {
        SortOptionsOneOf sort_options_one_of = 1;

        SortOptionsOneOf1 sort_options_one_of1 = 2;

        string string = 3;

        SortOptionsOneOf sort_options_one_of = 4;

        FieldSortMap field_sort_map = 5;

    }

}
message SortOptionsArray {


  repeated SortOptions sort_options_array = 1;

}
enum SortOptionsOneOf {
  SORT_OPTIONS_ONE_OF_UNSPECIFIED = 0;
  SORT_OPTIONS_ONE_OF__SCORE = 1;
}
enum SortOptionsOneOf1 {
  SORT_OPTIONS_ONE_OF1_UNSPECIFIED = 0;
  SORT_OPTIONS_ONE_OF1__DOC = 1;
}
enum SortOrder {
  SORT_ORDER_UNSPECIFIED = 0;
  SORT_ORDER_ASC = 1;
  SORT_ORDER_DESC = 2;
}
message SourceConfig {

    oneof source_config {
        bool fetch = 1;

        SourceFilter filter = 2;

    }

}
message SourceConfigParam {

    oneof source_config_param {
        bool fetch = 1;

        Fields fields = 2;

    }

}
message SourceFilter {

    oneof source_filter {
        Fields includes = 1;

        SourceFilterOneOf source_filter_one_of = 2;

    }

}
message SourceFilterOneOf {


  Fields excludes = 1;

  Fields includes = 2;

}
message SpanContainingQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  SpanQuery big = 3;

  SpanQuery little = 4;

}
message SpanFieldMaskingQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 3;

  SpanQuery query = 4;

}
message SpanFirstQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Controls the maximum end position permitted in a match.
  int32 end = 3;

  SpanQuery match = 4;

}
message SpanMultiTermQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  QueryContainer match = 3;

}
message SpanNearQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Array of one or more other span type queries.
  repeated SpanQuery clauses = 3;

  // Controls whether matches are required to be in-order.
  bool in_order = 4;

  // Controls the maximum number of intervening unmatched positions permitted.
  int32 slop = 5;

}
message SpanNotQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // The number of tokens from within the include span that can't have overlap with the exclude span. Equivalent to setting both `pre` and `post`.
  int32 dist = 3;

  SpanQuery exclude = 4;

  SpanQuery include = 5;

  // The number of tokens after the include span that can't have overlap with the exclude span.
  int32 post = 6;

  // The number of tokens before the include span that can't have overlap with the exclude span.
  int32 pre = 7;

}
message SpanOrQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Array of one or more other span type queries.
  repeated SpanQuery clauses = 3;

}
message SpanQuery {


  SpanContainingQuery span_containing = 1;

  SpanFieldMaskingQuery field_masking_span = 2;

  SpanFirstQuery span_first = 3;

  // Can only be used as a clause in a `span_near` query.
  map<string, int32> span_gap = 4;

  SpanMultiTermQuery span_multi = 5;

  SpanNearQuery span_near = 6;

  SpanNotQuery span_not = 7;

  SpanOrQuery span_or = 8;

  // The equivalent of the `term` query but for use with other span queries.
  map<string, SpanTermQuery> span_term = 9;

  SpanWithinQuery span_within = 10;

}
message SpanTermQuery {

    oneof span_term_query {
        string value = 1;

        SpanTermQueryOneOf span_term_query_one_of = 2;

    }

}
message SpanTermQueryOneOf {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  string value = 3;

}
message SpanWithinQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  SpanQuery big = 3;

  SpanQuery little = 4;

}
message StandardAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_STANDARD = 1;
  }

  Type type = 1;

  int32 max_token_length = 2;

  // Language value, such as `arabic` or `thai`. Defaults to `english`. Each language value corresponds to a predefined list of stop words in Lucene. See Stop words by language for supported language values and their stop words. Also accepts an array of stop words.
  StringOrStringArray stopwords = 3;

}
message StandardDeviationBounds {


  StandardDeviationBoundsUpper upper = 1;

  StandardDeviationBoundsLower lower = 2;

  StandardDeviationBoundsUpperPopulation upper_population = 3;

  StandardDeviationBoundsLowerPopulation lower_population = 4;

  StandardDeviationBoundsUpperSampling upper_sampling = 5;

  StandardDeviationBoundsLowerSampling lower_sampling = 6;

}
message StandardDeviationBoundsAsString {


  string upper = 1;

  string lower = 2;

  string upper_population = 3;

  string lower_population = 4;

  string upper_sampling = 5;

  string lower_sampling = 6;

}
message StandardDeviationBoundsLower {


  float float = 1;

  string string = 2;

}
message StandardDeviationBoundsLowerPopulation {


  float float = 1;

  string string = 2;

}
message StandardDeviationBoundsLowerSampling {


  float float = 1;

  string string = 2;

}
message StandardDeviationBoundsUpper {


  float float = 1;

  string string = 2;

}
message StandardDeviationBoundsUpperPopulation {


  float float = 1;

  string string = 2;

}
message StandardDeviationBoundsUpperSampling {


  float float = 1;

  string string = 2;

}
message StatsAggregate {


  google.protobuf.Struct meta = 1;

  float count = 2;

  StatsAggregateAllOfMin min = 3;

  StatsAggregateAllOfMax max = 4;

  StatsAggregateAllOfAvg avg = 5;

  float sum = 6;

  string min_as_string = 7;

  string max_as_string = 8;

  string avg_as_string = 9;

  string sum_as_string = 10;

}
message StatsAggregateAllOfAvg {


  float float = 1;

  string string = 2;

}
message StatsAggregateAllOfMax {


  float float = 1;

  string string = 2;

}
message StatsAggregateAllOfMin {


  float float = 1;

  string string = 2;

}
message StatsAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  string format = 4;

}
message StatsBucketAggregate {


  google.protobuf.Struct meta = 1;

  float count = 2;

  StatsAggregateAllOfMin min = 3;

  StatsAggregateAllOfMax max = 4;

  StatsAggregateAllOfAvg avg = 5;

  float sum = 6;

  string min_as_string = 7;

  string max_as_string = 8;

  string avg_as_string = 9;

  string sum_as_string = 10;

}
message StatsBucketAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

}
message StopAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_STOP = 1;
  }

  Type type = 1;

  string version = 2;

  // Language value, such as `arabic` or `thai`. Defaults to `english`. Each language value corresponds to a predefined list of stop words in Lucene. See Stop words by language for supported language values and their stop words. Also accepts an array of stop words.
  StringOrStringArray stopwords = 3;

  string stopwords_path = 4;

}
message StopWords {


}
message StoredScriptId {


  // Specifies any named parameters that are passed into the script as variables.  Use parameters instead of hard-coded values to decrease compilation time. 
  google.protobuf.Struct params = 1;

  string id = 2;

}
message StringArray {


  repeated string string_array = 1;

}
enum StringDistance {
  STRING_DISTANCE_UNSPECIFIED = 0;
  STRING_DISTANCE_DAMERAU_LEVENSHTEIN = 1;
  STRING_DISTANCE_INTERNAL = 2;
  STRING_DISTANCE_JARO_WINKLER = 3;
  STRING_DISTANCE_LEVENSHTEIN = 4;
  STRING_DISTANCE_NGRAM = 5;
}
message StringMap {


  map<string, string> string_map = 1;

}
message StringMapArray {


  repeated StringMap string_map_array = 1;

}
message StringOrStringArray {

    oneof string_or_string_array {
        string string = 1;

        StringArray string_array = 2;

    }

}
message StringRareTermsAggregate {


  google.protobuf.Struct meta = 1;

  BucketsStringRareTermsBucket buckets = 2;

}
message StringRareTermsBucket {


  float doc_count = 1;

  string key = 2;

}
message StringRareTermsBucketArray {


  repeated StringRareTermsBucket string_rare_terms_bucket_array = 1;

}
message StringRareTermsBucketMap {


  map<string, StringRareTermsBucket> string_rare_terms_bucket_map = 1;

}
message StringStatsAggregate {


  google.protobuf.Struct meta = 1;

  float count = 2;

  StringStatsAggregateAllOfMinLength min_length = 3;

  StringStatsAggregateAllOfMaxLength max_length = 4;

  StringStatsAggregateAllOfAvgLength avg_length = 5;

  StringStatsAggregateAllOfEntropy entropy = 6;

  StringStatsAggregateAllOfDistribution distribution = 7;

  string min_length_as_string = 8;

  string max_length_as_string = 9;

  string avg_length_as_string = 10;

}
message StringStatsAggregateAllOfAvgLength {


  float float = 1;

  string string = 2;

}
message StringStatsAggregateAllOfDistribution {

    oneof string_stats_aggregate_all_of_distribution {
        FloatMap float_map = 1;

        string string = 2;

    }

}
message StringStatsAggregateAllOfEntropy {


  float float = 1;

  string string = 2;

}
message StringStatsAggregateAllOfMaxLength {


  float float = 1;

  string string = 2;

}
message StringStatsAggregateAllOfMinLength {


  float float = 1;

  string string = 2;

}
message StringStatsAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  // Shows the probability distribution for all characters.
  bool show_distribution = 4;

}
message StringTermsAggregate {


  google.protobuf.Struct meta = 1;

  BucketsStringTermsBucket buckets = 2;

  float doc_count_error_upper_bound = 3;

  float sum_other_doc_count = 4;

}
message StringTermsBucket {


  float doc_count = 1;

  float doc_count_error = 2;

  FieldValue key = 3;

}
message StringTermsBucketArray {


  repeated StringTermsBucket string_terms_bucket_array = 1;

}
message StringTermsBucketMap {


  map<string, StringTermsBucket> string_terms_bucket_map = 1;

}
message StupidBackoffSmoothingModel {


  double discount = 1;

}
message Suggest {

    oneof suggest {
        CompletionSuggest completion = 1;

        PhraseSuggest phrase = 2;

        TermSuggest term = 3;

    }

}
message SuggestArray {


  repeated Suggest suggest_array = 1;

}
message SuggestBase {


  int32 length = 1;

  int32 offset = 2;

  string text = 3;

}
message SuggestFuzziness {


  string fuzziness = 1;

  int32 min_length = 2;

  int32 prefix_length = 3;

  bool transpositions = 4;

  bool unicode_aware = 5;

}
enum SuggestMode {
  SUGGEST_MODE_UNSPECIFIED = 0;
  SUGGEST_MODE_ALWAYS = 1;
  SUGGEST_MODE_MISSING = 2;
  SUGGEST_MODE_POPULAR = 3;
}
enum SuggestSort {
  SUGGEST_SORT_UNSPECIFIED = 0;
  SUGGEST_SORT_FREQUENCY = 1;
  SUGGEST_SORT_SCORE = 2;
}
message Suggester {


  // The global suggest text, which avoids repetition when the same text is used in several suggesters.
  string text = 1;

}
message SuggesterBase {


  string analyzer = 1;

  string field = 2;

  int32 size = 3;

}
message SumAggregate {


  google.protobuf.Struct meta = 1;

  SingleMetricAggregateBaseAllOfValue value = 2;

  string value_as_string = 3;

}
message SumAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  string format = 4;

}
message SumBucketAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  BucketsPath buckets_path = 3;

  // `DecimalFormat` pattern for the output value. If specified, the formatted value is returned in the aggregation's `value_as_string` property.
  string format = 4;

  GapPolicy gap_policy = 5;

}
message TDigest {


  // Limits the maximum number of nodes used by the underlying TDigest algorithm to `20 * compression`, enabling control of memory usage and approximation error.
  int32 compression = 1;

}
message TDigestPercentileRanksAggregate {


  google.protobuf.Struct meta = 1;

  Percentiles values = 2;

}
message TDigestPercentilesAggregate {


  google.protobuf.Struct meta = 1;

  Percentiles values = 2;

}
message TTestAggregate {


  google.protobuf.Struct meta = 1;

  TTestAggregateAllOfValue value = 2;

  string value_as_string = 3;

}
message TTestAggregateAllOfValue {


  float float = 1;

  string string = 2;

}
message TTestAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  TestPopulation a = 3;

  TestPopulation b = 4;

  TTestType type = 5;

}
enum TTestType {
  T_TEST_TYPE_UNSPECIFIED = 0;
  T_TEST_TYPE_HETEROSCEDASTIC = 1;
  T_TEST_TYPE_HOMOSCEDASTIC = 2;
  T_TEST_TYPE_PAIRED = 3;
}
message TermQuery {

    oneof term_query {
        FieldValue value = 1;

        TermQueryOneOf term_query_one_of = 2;

    }

}
message TermQueryOneOf {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  FieldValue value = 3;

  // Allows ASCII case insensitive matching of the value with the indexed field values when set to `true`. When `false`, the case sensitivity of matching depends on the underlying field's mapping.
  bool case_insensitive = 4;

}
message TermSuggest {


  int32 length = 1;

  int32 offset = 2;

  string text = 3;

  TermSuggestAllOfOptions options = 4;

}
message TermSuggestAllOfOptions {

    oneof term_suggest_all_of_options {
        TermSuggestOption term_suggest_option = 1;

        TermSuggestOptionArray term_suggest_option_array = 2;

    }

}
message TermSuggestOption {


  string text = 1;

  double score = 2;

  int64 freq = 3;

  string highlighted = 4;

  bool collate_match = 5;

}
message TermSuggestOptionArray {


  repeated TermSuggestOption term_suggest_option_array = 1;

}
message TermSuggester {


  string analyzer = 1;

  string field = 2;

  int32 size = 3;

  bool lowercase_terms = 4;

  int32 max_edits = 5;

  int32 max_inspections = 6;

  float max_term_freq = 7;

  float min_doc_freq = 8;

  int32 min_word_length = 9;

  int32 prefix_length = 10;

  int32 shard_size = 11;

  SuggestSort sort = 12;

  StringDistance string_distance = 13;

  SuggestMode suggest_mode = 14;

  string text = 15;

}
message TermsAggregateBaseDoubleTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsDoubleTermsBucket buckets = 2;

  float doc_count_error_upper_bound = 3;

  float sum_other_doc_count = 4;

}
message TermsAggregateBaseLongTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsLongTermsBucket buckets = 2;

  float doc_count_error_upper_bound = 3;

  float sum_other_doc_count = 4;

}
message TermsAggregateBaseMultiTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsMultiTermsBucket buckets = 2;

  float doc_count_error_upper_bound = 3;

  float sum_other_doc_count = 4;

}
message TermsAggregateBaseStringTermsBucket {


  google.protobuf.Struct meta = 1;

  BucketsStringTermsBucket buckets = 2;

  float doc_count_error_upper_bound = 3;

  float sum_other_doc_count = 4;

}
message TermsAggregateBaseVoid {


  google.protobuf.Struct meta = 1;

  BucketsVoid buckets = 2;

  float doc_count_error_upper_bound = 3;

  float sum_other_doc_count = 4;

}
message TermsAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  TermsAggregationCollectMode collect_mode = 3;

  TermsExclude exclude = 4;

  TermsAggregationExecutionHint execution_hint = 5;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 6;

  TermsInclude include = 7;

  // Only return values that are found in more than `min_doc_count` hits.
  int32 min_doc_count = 8;

  FieldValue missing = 9;

  MissingOrder missing_order = 10;

  bool missing_bucket = 11;

  // Coerced unmapped fields into the specified type.
  string value_type = 12;

  AggregateOrder order = 13;

  Script script = 14;

  // The number of candidate terms produced by each shard. By default, `shard_size` will be automatically estimated based on the number of shards and the `size` parameter.
  int32 shard_size = 15;

  // Set to `true` to return the `doc_count_error_upper_bound`, which is an upper bound to the error on the `doc_count` returned by each shard.
  bool show_term_doc_count_error = 16;

  // The number of buckets returned out of the overall terms list.
  int32 size = 17;

  string format = 18;

}
enum TermsAggregationCollectMode {
  TERMS_AGGREGATION_COLLECT_MODE_UNSPECIFIED = 0;
  TERMS_AGGREGATION_COLLECT_MODE_BREADTH_FIRST = 1;
  TERMS_AGGREGATION_COLLECT_MODE_DEPTH_FIRST = 2;
}
enum TermsAggregationExecutionHint {
  TERMS_AGGREGATION_EXECUTION_HINT_UNSPECIFIED = 0;
  TERMS_AGGREGATION_EXECUTION_HINT_GLOBAL_ORDINALS = 1;
  TERMS_AGGREGATION_EXECUTION_HINT_GLOBAL_ORDINALS_HASH = 2;
  TERMS_AGGREGATION_EXECUTION_HINT_GLOBAL_ORDINALS_LOW_CARDINALITY = 3;
  TERMS_AGGREGATION_EXECUTION_HINT_MAP = 4;
}
message TermsBucketBase {


  float doc_count = 1;

  float doc_count_error = 2;

}
message TermsExclude {

    oneof terms_exclude {
        string regexp = 1;

        StringArray string_array = 2;

    }

}
message TermsInclude {

    oneof terms_include {
        string regexp = 1;

        StringArray string_array = 2;

        TermsPartition partition = 3;

    }

}
message TermsLookup {


  string index = 1;

  string id = 2;

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string path = 3;

  string routing = 4;

}
message TermsPartition {


  // The number of partitions.
  int64 num_partitions = 1;

  // The partition number for this request.
  int64 partition = 2;

}
message TermsQuery {


  google.protobuf.Struct boost = 1;

  google.protobuf.Struct name = 2 [json_name="_name"];

}
message TermsQueryField {

    oneof terms_query_field {
        FieldValueArray field_value_array = 1;

        TermsLookup lookup = 2;

    }

}
message TermsSetQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string minimum_should_match_field = 3;

  Script minimum_should_match_script = 4;

  repeated string terms = 5;

}
message TestPopulation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  Script script = 2;

  QueryContainer filter = 3;

}
enum TextQueryType {
  TEXT_QUERY_TYPE_UNSPECIFIED = 0;
  TEXT_QUERY_TYPE_BEST_FIELDS = 1;
  TEXT_QUERY_TYPE_BOOL_PREFIX = 2;
  TEXT_QUERY_TYPE_CROSS_FIELDS = 3;
  TEXT_QUERY_TYPE_MOST_FIELDS = 4;
  TEXT_QUERY_TYPE_PHRASE = 5;
  TEXT_QUERY_TYPE_PHRASE_PREFIX = 6;
}
message TimeZone {


}
message TopHitsAggregate {


  google.protobuf.Struct meta = 1;

  HitsMetadata hits = 2;

}
message TopHitsAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  Fields docvalue_fields = 4;

  // If `true`, returns detailed information about score computation as part of a hit.
  bool explain = 5;

  // Starting document offset.
  int32 from = 6;

  Highlight highlight = 7;

  // Returns the result of one or more script evaluations for each hit.
  map<string, ScriptField> script_fields = 8;

  // The maximum number of top matching hits to return per bucket.
  int32 size = 9;

  Sort sort = 10;

  SourceConfig source = 11 [json_name="_source"];

  Fields stored_fields = 12;

  // If `true`, calculates and returns document scores, even if the scores are not used for sorting.
  bool track_scores = 13;

  // If `true`, returns document version as part of a hit.
  bool version = 14;

  // If `true`, returns sequence number and primary term of the last modification of each hit.
  bool seq_no_primary_term = 15;

}
message TopLeftBottomRightGeoBounds {


  GeoLocation top_left = 1;

  GeoLocation bottom_right = 2;

}
message TopMetrics {


  repeated FieldValue sort = 1;

  map<string, FieldValue> metrics = 2;

}
message TopMetricsAggregate {


  google.protobuf.Struct meta = 1;

  repeated TopMetrics top = 2;

}
message TopMetricsAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  TopMetricsAggregationAllOfMetrics metrics = 4;

  // The number of top documents from which to return metrics.
  int32 size = 5;

  Sort sort = 6;

}
message TopMetricsAggregationAllOfMetrics {

    oneof top_metrics_aggregation_all_of_metrics {
        TopMetricsValue top_metrics_value = 1;

        TopMetricsValueArray top_metrics_value_array = 2;

    }

}
message TopMetricsValue {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

}
message TopMetricsValueArray {


  repeated TopMetricsValue top_metrics_value_array = 1;

}
message TopRightBottomLeftGeoBounds {


  GeoLocation top_right = 1;

  GeoLocation bottom_left = 2;

}
message TotalHits {


  TotalHitsRelation relation = 1;

  int64 value = 2;

}
message TotalHitsRelation {

    oneof total_hits_relation {
        TotalHitsRelationOneOf total_hits_relation_one_of = 1;

        TotalHitsRelationOneOf1 total_hits_relation_one_of1 = 2;

    }

}
enum TotalHitsRelationOneOf {
  TOTAL_HITS_RELATION_ONE_OF_UNSPECIFIED = 0;
  TOTAL_HITS_RELATION_ONE_OF_EQ = 1;
}
enum TotalHitsRelationOneOf1 {
  TOTAL_HITS_RELATION_ONE_OF1_UNSPECIFIED = 0;
  TOTAL_HITS_RELATION_ONE_OF1_GTE = 1;
}
message TrackHits {

    oneof track_hits {
        bool enabled = 1;

        int32 count = 2;

    }

}
message Type {


}
message TypeQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  string value = 3;

}
message Uint {


}
message UnitMillis {


}
message UnitNanos {


}
message UnmappedRareTermsAggregate {


  google.protobuf.Struct meta = 1;

  BucketsVoid buckets = 2;

}
message UnmappedSamplerAggregate {


  google.protobuf.Struct meta = 1;

  float doc_count = 2;

}
message UnmappedSignificantTermsAggregate {


  google.protobuf.Struct meta = 1;

  BucketsVoid buckets = 2;

  float bg_count = 3;

  float doc_count = 4;

}
message UnmappedTermsAggregate {


  google.protobuf.Struct meta = 1;

  BucketsVoid buckets = 2;

  float doc_count_error_upper_bound = 3;

  float sum_other_doc_count = 4;

}
message UpdateAction {


  // When `false` disables the setting `result` in the response to `noop` if no change to the document occurred.
  bool detect_noop = 1;

  // A partial update to an existing document.
  google.protobuf.Struct doc = 2;

  // When `true`, uses the contents of `doc` as the value of `upsert`.
  bool doc_as_upsert = 3;

  Script script = 4;

  // When `true`, executes the script whether or not the document exists.
  bool scripted_upsert = 5;

  SourceConfig source = 6 [json_name="_source"];

  // If the document does not already exist, the contents of `upsert` are inserted as a new document. If the document exists, the `script` is executed.
  google.protobuf.Struct upsert = 7;

}
message UpdateOperation {


  string id = 1 [json_name="_id"];

  string index = 2 [json_name="_index"];

  string routing = 3;

  int64 if_primary_term = 4;

  int64 if_seq_no = 5;

  int64 version = 6;

  VersionType version_type = 7;

  // When `true`, the request's actions must target an index alias.
  bool require_alias = 8;

  int32 retry_on_conflict = 9;

}
message UpdateRequest {


  // Set to `false` to disable setting `result` in the response to `noop` if no change to the document occurred.
  bool detect_noop = 1;

  // A partial update to an existing document.
  google.protobuf.Struct doc = 2;

  // Set to `true` to use the contents of 'doc' as the value of 'upsert'
  bool doc_as_upsert = 3;

  Script script = 4;

  // Set to `true` to execute the script whether or not the document exists.
  bool scripted_upsert = 5;

  SourceConfig source = 6 [json_name="_source"];

  // If the document does not already exist, the contents of 'upsert' are inserted as a new document. If the document exists, the 'script' is executed.
  google.protobuf.Struct upsert = 7;

}
message UpdateWriteResponseBase {


  string type = 1 [json_name="_type"];

  string id = 2 [json_name="_id"];

  string index = 3 [json_name="_index"];

  int64 primary_term = 4 [json_name="_primary_term"];

  Result result = 5;

  int64 seq_no = 6 [json_name="_seq_no"];

  ShardStatistics shards = 7 [json_name="_shards"];

  int64 version = 8 [json_name="_version"];

  bool forced_refresh = 9;

  InlineGet get = 10;

}
message ValueCountAggregate {


  google.protobuf.Struct meta = 1;

  SingleMetricAggregateBaseAllOfValue value = 2;

  string value_as_string = 3;

}
message ValueCountAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  FieldValue missing = 2;

  Script script = 3;

  string format = 4;

}
enum ValueType {
  VALUE_TYPE_UNSPECIFIED = 0;
  VALUE_TYPE_BOOLEAN = 1;
  VALUE_TYPE_DATE = 2;
  VALUE_TYPE_DATE_NANOS = 3;
  VALUE_TYPE_DOUBLE = 4;
  VALUE_TYPE_GEO_POINT = 5;
  VALUE_TYPE_IP = 6;
  VALUE_TYPE_LONG = 7;
  VALUE_TYPE_NUMBER = 8;
  VALUE_TYPE_NUMERIC = 9;
  VALUE_TYPE_STRING = 10;
}
message VariableWidthHistogramAggregate {


  google.protobuf.Struct meta = 1;

  BucketsVariableWidthHistogramBucket buckets = 2;

}
message VariableWidthHistogramAggregation {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  // The target number of buckets.
  int32 buckets = 2;

  // The number of buckets that the coordinating node will request from each shard. Defaults to `buckets * 50`.
  int32 shard_size = 3;

  // Specifies the number of individual documents that will be stored in memory on a shard before the initial bucketing algorithm is run. Defaults to `min(10 * shard_size, 50000)`.
  int32 initial_buffer = 4;

}
message VariableWidthHistogramBucket {


  float doc_count = 1;

  float min = 2;

  float key = 3;

  float max = 4;

  string min_as_string = 5;

  string key_as_string = 6;

  string max_as_string = 7;

}
message VariableWidthHistogramBucketArray {


  repeated VariableWidthHistogramBucket variable_width_histogram_bucket_array = 1;

}
message VariableWidthHistogramBucketMap {


  map<string, VariableWidthHistogramBucket> variable_width_histogram_bucket_map = 1;

}
message VersionNumber {


}
message VersionString {


}
enum VersionType {
  VERSION_TYPE_UNSPECIFIED = 0;
  VERSION_TYPE_EXTERNAL = 1;
  VERSION_TYPE_EXTERNAL_GTE = 2;
  VERSION_TYPE_FORCE = 3;
  VERSION_TYPE_INTERNAL = 4;
}
enum WaitForActiveShardOptions {
  WAIT_FOR_ACTIVE_SHARD_OPTIONS_UNSPECIFIED = 0;
  WAIT_FOR_ACTIVE_SHARD_OPTIONS_ALL = 1;
  WAIT_FOR_ACTIVE_SHARD_OPTIONS_INDEX_SETTING = 2;
}
message WaitForActiveShards {

    oneof wait_for_active_shards {
        int32 count = 1;

        WaitForActiveShardOptions option = 2;

    }

}
message WaitForActiveShardsOneOf {


}
enum Week {
  WEEK_UNSPECIFIED = 0;
  WEEK_WEEK = 1;
  WEEK_1W = 2;
}
message WeightedAverageAggregation {


  google.protobuf.Struct meta = 1;

  string name = 2;

  // A numeric response formatter.
  string format = 3;

  WeightedAverageValue value = 4;

  ValueType value_type = 5;

  WeightedAverageValue weight = 6;

}
message WeightedAverageValue {


  // The path to a field or an array of paths. Some APIs support wildcards in the path, which allows you to select multiple fields.
  string field = 1;

  // A value or weight to use if the field is missing.
  double missing = 2;

  Script script = 3;

}
message WeightedAvgAggregate {


  google.protobuf.Struct meta = 1;

  SingleMetricAggregateBaseAllOfValue value = 2;

  string value_as_string = 3;

}
message WhitespaceAnalyzer {


  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_WHITESPACE = 1;
  }

  Type type = 1;

  string version = 2;

}
message WildcardQuery {

    oneof wildcard_query {
        string value = 1;

        WildcardQueryOneOf wildcard_query_one_of = 2;

    }

}
message WildcardQueryOneOf {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // Allows case insensitive matching of the pattern with the indexed field values when set to `true`. Default is `false` which means the case sensitivity of matching depends on the underlying field's mapping.
  bool case_insensitive = 3;

  MultiTermQueryRewrite rewrite = 4;

  // Wildcard pattern for terms you wish to find in the provided field. Required, when wildcard is not set.
  string value = 5;

  // Wildcard pattern for terms you wish to find in the provided field. Required, when value is not set.
  string wildcard = 6;

}
message WktGeoBounds {


  string wkt = 1;

}
message WrapperQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  // A base64 encoded query. The binary data format can be any of JSON, YAML, CBOR or SMILE encodings
  string query = 3;

}
message WriteOperation {


  string id = 1 [json_name="_id"];

  string index = 2 [json_name="_index"];

  string routing = 3;

  int64 if_primary_term = 4;

  int64 if_seq_no = 5;

  int64 version = 6;

  VersionType version_type = 7;

  // A map from the full name of fields to the name of dynamic templates. If a name matches a dynamic template, then that template will be applied regardless of other match predicates defined in the template. If a field is already defined in the mapping, then this parameter won't be used.
  map<string, string> dynamic_templates = 8;

  // The pipeline ID for preprocessing documents. When the index has a default ingest pipeline specified, then setting the value to `_none` disables the default ingest pipeline for this request. When a final pipeline is configured, that pipeline will always run, regardless of the value of this parameter.
  string pipeline = 9;

  // When `true`, require that all actions target an index alias rather than an index. Default is `false`.
  bool require_alias = 10;

}
message WriteResponseBase {


  string type = 1 [json_name="_type"];

  string id = 2 [json_name="_id"];

  string index = 3 [json_name="_index"];

  int64 primary_term = 4 [json_name="_primary_term"];

  Result result = 5;

  int64 seq_no = 6 [json_name="_seq_no"];

  ShardStatistics shards = 7 [json_name="_shards"];

  int64 version = 8 [json_name="_version"];

  bool forced_refresh = 9;

}
message XyShape {


  string type = 1;

  repeated google.protobuf.Struct coordinates = 2;

}
message XyShapeQuery {


  // Floating point number used to decrease or increase the relevance scores of the query. Boost values are relative to the default value of 1.0. A boost value between 0 and 1.0 decreases the relevance score. A value greater than 1.0 increases the relevance score.
  float boost = 1;

  string name = 2 [json_name="_name"];

  bool ignore_unmapped = 3;

}
message XyShapeQueryField {


  FieldLookup indexed_shape = 1;

  XyShape shape = 2;

  GeoShapeRelation relation = 3;

}
enum Yards {
  YARDS_UNSPECIFIED = 0;
  YARDS_YD = 1;
}
enum Year {
  YEAR_UNSPECIFIED = 0;
  YEAR_YEAR = 1;
  YEAR_1Y = 2;
}
enum ZeroTermsQuery {
  ZERO_TERMS_QUERY_UNSPECIFIED = 0;
  ZERO_TERMS_QUERY_ALL = 1;
  ZERO_TERMS_QUERY_ALL2 = 2;
  ZERO_TERMS_QUERY_NONE = 3;
  ZERO_TERMS_QUERY_NONE2 = 4;
}
